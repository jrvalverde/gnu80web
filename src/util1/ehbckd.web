@* ehbckd.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] AR                                                        
\item[INPUT:] AI                                                        
\item[INPUT:] TAU                                                       
\item[INPUT:] N                                                         
\item[OUTPUT:] ZR                                                        
\item[OUTPUT:] ZI                                                        
\item[INPUT:] IZ                                                        
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]   NOTHING                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GSQRT                                                  
\item[Called by]   DIAGD                                                  
                                                                    
\end{description}

\begin{verbatim}

   function            - backtransform the eigenvectors of a real
                           symmetric tridiagonal matrix obtained
                           from a hermitian matrix.
   parameters   ar     - input vector of length n*(n+1)/2 containing
                           the details of the householder reduction
                           as generated by subroutine 'ehousd'.
                ai     - input vector of length n*(n+1)/2 containing
                           the imaginary counterparts to ar, above.
                tau    - input matrix of dimension 2 by n containing
                           the remaining information about unitary
                           transformation (see parameter description
                           of tau in subroutine ehousd).
                n      - input scalar containing the order of the
                           hermitian matrix.
                zr     - input/output matrix of dimension n by n.
                           on input contains the real components
                           of the eigenvectors to be back transformed
                           as generated by subroutine 'eqrt2d'
                           (see parameter description of z in eqrt2s).
                           on output contains the real components
                           of the transformed eigenvectors.
                zi     - output matrix of dimension n by n
                           containing the imaginary components
                           of the transformed eigenvectors.
                iz     - input scalar containing the row
                           dimension of zr and zi in calling program.
      implemented by rolf seeger
      numer. math., 11, 181 (1968)

                                  transform the eigenvectors of the
                                    real symmetric tridiagonal matrix
                                    to those of the hermitian tridia-
                                    gonal matrix
\end{verbatim}


@a
      subroutine ehbckd(AR,AI,TAU,N,ZR,ZI,IZ)
      implicit none
      double precision AI , alpha1 , alpha2 , AR , delta , gsqrt , TAU , 
     &                 zero , ZI , ZR
      integer inx1 , inx2 , IZ , j , k , k1 , l , N , nr , nrm1
      dimension AR(*) , AI(*) , TAU(2,*) , ZR(IZ,*) , ZI(IZ,*)
      data zero/.0D0/
      do 100 j = 1 , N
         do 50 k = 1 , N
            ZI(j,k) = -ZR(j,k)*TAU(2,j)
            ZR(j,k) = ZR(j,k)*TAU(1,j)
 50      continue
 100  continue
      if ( N.gt.2 ) then
C                                  recover the householder matrices in
C                                    reverse order
         do 150 l = 3 , N
            nr = N - l + 2
            nrm1 = nr - 1
            inx1 = nr*(nrm1)/2 + nr
            inx2 = inx1 - 1
            if ( AI(inx1).ne.0 ) then
               delta = AI(inx1)*gsqrt(AR(inx2)**2+AI(inx2)**2)
               do 120 j = 1 , N
                  alpha1 = zero
                  alpha2 = zero
                  do 105 k = nr , N
                     k1 = k*(k-1)/2 + nrm1
                     alpha1 = alpha1 + AR(k1)*ZR(k,j) + AI(k1)*ZI(k,j)
                     alpha2 = alpha2 - AI(k1)*ZR(k,j) + AR(k1)*ZI(k,j)
 105              continue
                  alpha1 = alpha1/delta
                  alpha2 = alpha2/delta
                  do 110 k = nr , N
                     k1 = k*(k-1)/2 + nrm1
                     ZR(k,j) = ZR(k,j) - AR(k1)*alpha1 + AI(k1)*alpha2
                     ZI(k,j) = ZI(k,j) - AR(k1)*alpha2 - AI(k1)*alpha1
 110              continue
 120           continue
            endif
 150     continue
      endif
      return
C
      end
@* INDEX.
