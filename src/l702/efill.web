@* efill.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] ISHELL                                                    
\item[INPUT:] JSHELL                                                    
\item[INPUT:] KSHELL                                                    
\item[INPUT:] LSHELL                                                    
\item[INPUT:] LA                                                        
\item[INPUT:] LB                                                        
\item[INPUT:] LC                                                        
\item[INPUT:] LD                                                        
\item[INPUT:] AX1                                                       
\item[INPUT:] ISCF                                                      
\item[INPUT:] DM                                                        
\item[INPUT:] DN                                                        
\item[OUTPUT:] E                                                         
\item[OUTPUT:] DMAX                                                      
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]  AOS                                                    
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GABS                                                   
\item[Called by]   TWLDRV                                                 
                                                                    
\end{description}
@a
      subroutine efill(ISHELL,JSHELL,KSHELL,LSHELL,LA,LB,LC,LD,AX1,ISCF,
     &                 DM,DN,E,DMAX)
      implicit none
      double precision AX1 , C1 , C2 , C3 , C4 , d12 , d1234 , d12b , 
     &                 d13 , d13b , d14 , d14b , d23 , d23b , d24 , 
     &                 d24b , d34 , d34b , DM , DMAX
      double precision DN , E , Exx , gabs , h , p25 , Shladf , X , Y , 
     &                 Z , zero
      integer i , iaos , ias , id , ISCF , iscfp , ISHELL , j , Jan , 
     &        jaos , jas , JSHELL , k , kaos , kas , KSHELL , l , LA , 
     &        laos , las
      integer LB , LC , LD , LENB , lii , lij , lik , lil , ljj , ljk , 
     &        ljl , lkk , lkl , lll , LSHELL , MAXPRM , MAXS21 , 
     &        MAXSH1 , MAXSHL , Maxtyp
      integer Nshell
      integer Shella , Shelln , Shellt , Shellc , Aos , Aon
      logical open , complx
      dimension DM(*) , DN(*) , E(*)
      parameter (MAXSHL=100,MAXPRM=(3*MAXSHL),MAXSH1=(MAXSHL+1),
     &           MAXS21=(2*MAXSHL+1),LENB=(15*MAXSHL+7*MAXSHL/2+1))
      common /b     / Exx(MAXPRM) , C1(MAXPRM) , C2(MAXPRM) , C3(MAXPRM)
     &                , X(MAXSHL) , Y(MAXSHL) , Z(MAXSHL) , Jan(MAXSHL)
     &                , Shella(MAXSHL) , Shelln(MAXSHL) , Shellt(MAXSHL)
     &                , Shellc(MAXSHL) , Aos(MAXSHL) , Aon(MAXSHL) , 
     &                Nshell , Maxtyp
      dimension C4(MAXSHL) , Shladf(MAXSHL)
      equivalence (C4(1),C3(MAXSH1)) , (Shladf(1),C3(MAXS21))
      data zero/0.0D0/ , p25/0.25D0/ , h/0.5D0/
C
C***********************************************************************
C     routine to pluck density matrix contributions according
C     to shell numbers (ishell,...,lshell) and store into local
C     array e.  also, the max density matrix element for this block
C     is determined.
C
C     arguments:
C
C     ishell to lshell ... shell numbers of the four shells.
C     iscf             ... scf mode flag.  see comments in
C                          d2esp for details.
C     dm and dn        ... arrays containing density matrices.
C                          exactly what they contain depends on
C                          iscf.  refer to d2esp for details.
C     e                ... array of dimension 256, filled with
C                          combinations of density matrix elements.
C     dmax             ... max combination formed.  useful later on
C                          when deciding just what to keep.
C
C***********************************************************************
C
C
C     connect to the basis common.
C
C     set up local control variables for within loops.
      iscfp = ISCF + 1
      open = ISCF.eq.1
      complx = ISCF.eq.2
C
C     determine starting addresses of basis functions within shells.
      iaos = Aos(ISHELL) - 1
      jaos = Aos(JSHELL) - 1
      kaos = Aos(KSHELL) - 1
      laos = Aos(LSHELL) - 1
C
C     loop over all basis functions for this shell set, and store
C     density matrix contributions into e.
      DMAX = zero
      do 100 l = 1 , LD
         las = laos + l
         lll = las*(las-1)/2
C
         do 50 k = 1 , LC
            kas = kaos + k
            lkk = kas*(kas-1)/2
            lkl = lkk + las
            if ( kas.lt.las ) lkl = lll + kas
            d34 = DM(lkl)
            if ( open ) d34b = DN(lkl)
C
            do 20 j = 1 , LB
               id = 16*j + 4*k + l - 84
               jas = jaos + j
               ljj = jas*(jas-1)/2
               ljk = ljj + kas
               if ( jas.lt.kas ) ljk = lkk + jas
               d23 = DM(ljk)
               ljl = ljj + las
               if ( jas.lt.las ) ljl = lll + jas
               d24 = DM(ljl)
               if ( open .or. complx ) then
                  d23b = DN(ljk)
                  d24b = DN(ljl)
                  if ( complx ) then
                     if ( kas.lt.jas ) d23b = -d23b
                     if ( jas.lt.las ) d24b = -d24b
                  endif
               endif
C
               do 10 i = 1 , LA
                  id = id + 64
                  ias = iaos + i
                  lii = ias*(ias-1)/2
                  lij = lii + jas
                  if ( ias.lt.jas ) lij = ljj + ias
                  d12 = DM(lij)
                  lik = lii + kas
                  if ( ias.lt.kas ) lik = lkk + ias
                  d13 = DM(lik)
                  lil = lii + las
                  if ( ias.lt.las ) lil = lll + ias
                  d14 = DM(lil)
C
C     branch to particular code based on iscf.
                  if ( iscfp.eq.2 ) then
C
C     real-uhf.
                     d12b = DN(lij)
                     d13b = DN(lik)
                     d14b = DN(lil)
                     d1234 = ((d12+d12b)*(d34+d34b)
     &                       -h*(d13*d24+d23*d14+d13b*d24b+d23b*d14b))
     &                       *AX1
                  elseif ( iscfp.eq.3 ) then
C
C     complex-rhf, closed shell.
                     d14b = DN(lil)
                     d13b = DN(lik)
                     if ( ias.lt.las ) d14b = -d14b
                     if ( kas.lt.ias ) d13b = -d13b
C
C     rohf ... restricted open shell.
C     nothing here yet.
                     d1234 = (d12*d34-p25*(d13*d24+d23*d14-d13b*d24b-
     &                       d23b*d14b))*AX1
                  elseif ( iscfp.ne.4 ) then
C
C     real-rhf, closed shell.
                     d1234 = (d12*d34-p25*(d13*d24+d23*d14))*AX1
                  endif
C
C     store computed value into e, and check dmax.
                  E(id) = d1234
                  d1234 = gabs(d1234)
                  if ( d1234.gt.DMAX ) DMAX = d1234
 10            continue
 20         continue
 50      continue
 100  continue
C
C     all done, return.
      return
C
      end
@* INDEX.
