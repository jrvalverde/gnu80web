@* twrite.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] IARN                                                      
\item[OUTPUT:] X                                                         
\item[INPUT:] M                                                         
\item[INPUT:] N                                                         
\item[INPUT:] MM                                                        
\item[INPUT:] NN                                                        
\item[INPUT:] K                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]   NOTHING                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       FILEIO  UNPCCK                                         
\item[Called by]   ALTGES  ANNIL   BASSYM  BLDMAP  BLDTBL  CIDENS  CIDS1  
             CIDS2   CIDS3   CIDS4   CIDS5   CMPDEN  CONCLO  CONOPN 
             CONPHF  CONTT   CYCCLO  CYCOPN  CYCPHF  D1E     D2ESP  
             D2ESPD  DENSTY  DIPOLE  DLPINT  DOUBAR  DQ      EROUTE 
             FERMI   FILLRT  FIRST   FIXREP  FORMV   FPEXIT  FPMAIN 
             FRCOUT  FRMPRJ  FRMV    FRMW    GAMGEN  GBASIS  GEOM   
             GESRWF  GETGES  GINPUT  GLPINT  GUESS   ILSW    LEVSHF 
             LINK1   LNK1E   MSOPT   MULPOP  NEXTOV  OMEGA   OPTMZ  
             OUT2E   OUTREP  PAANN   PFORM   PHFCHK  PHYFIL  PINPUT 
             PRJHUK  PROJEC  RDCHG   RDGEOM  RDTITL  RHFCLO  RHFOPN 
             RSTART  SCFDM   SET2E   SFOPTI  SPIN    STVINT  SYMASG 
             TIOC    TROPEN  TWREIG  UDBS    UDFP    UDMS    UHFOPN 
             UHFTST  VALUE   VIBFRQ  WINDOW                         
                                                                    
\end{description}
@a
      subroutine twrite(IARN,X,M,N,MM,NN,K)
      implicit none
      integer i , IARN , ii , inum , j , jj , K , M , MM , N , NN
      double precision X
      dimension X(M,N)
C
C
C     this routine writes specified data into a read-write file.
C     it also has the capability of writing only the lower
C     triangle of a symmetric matrix, so as to save some mass
C     storage and io time.  the array is assumed dimensioned to
C     x(m,n), and is filled to x(mm,nn).  specifically, the calling
C     arguments are (in order):
C
C     iarn ... this is the number of the file to which the data
C              is to be written.  a list of the files currently
C              used is maintained in link1.
C
C     x ...... this is the array containing the data to be written.
C
C     m, n ... these are the actual dimensions of the array
C              (dimension x(m,n)).
C
C     mm, nn.. these are the limits to which the array if filled.
C
C     k ...... this flag controls whether only the lower triangle
C              of a symmetric matrix is to be written.
C              0 ... no, write the whole matrix.
C              1 ... yes, write out only the lower triangle.  in
C                    this case, you must specify k=1 on the tread
C                    call to read it back in, if you want the matrix
C                    in its original form (see subroutine tread).
C
C
C     *****************************************************************
C
C
C     temporary code to deal with new file numbers.
      inum = IARN
      if ( mod(inum,1000).lt.500 ) inum = inum + 500
C
      if ( K.ne.0 ) then
C     conversion to linear form ... for writing
         ii = 1
         jj = 1
         do 50 j = 1 , NN
            do 20 i = 1 , j
               X(ii,jj) = X(i,j)
               ii = ii + 1
               if ( ii.gt.M ) then
                  ii = 1
                  jj = jj + 1
               endif
 20         continue
 50      continue
         ii = (MM*(MM+1))/2
      else
C
         if ( NN.ne.1 ) then
            if ( M.le.MM ) then
C
               ii = 1
               jj = 2
            else
               ii = MM + 1
               jj = 1
            endif
            do 80 j = 2 , NN
               do 60 i = 1 , MM
                  X(ii,jj) = X(i,j)
                  if ( ii.ne.M ) then
C
                     ii = ii + 1
                  else
                     ii = 1
                     jj = jj + 1
                  endif
 60            continue
 80         continue
         endif
         ii = MM*NN
      endif
C     writes record x
      call fileio(1,-inum,ii,X,0)
C     linear to square conversion
      if ( NN.ne.1 ) call unpcck(K,ii,X,M,N,MM,NN)
      return
C
      end
@* INDEX.
