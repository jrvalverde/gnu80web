@* ijkpri.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] I                                                         
\item[INPUT:] J                                                         
\item[INPUT:] K                                                         
\item[INPUT:] L                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]   NOTHING                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]        NOTHING                                           
\item[Called by]    NOTHING                                           
                                                                    
\end{description}
@a
      integer function ijkpri(I,J,K,L)
      implicit none
      integer I , J , K , L , loop , loop1 , loop2 , num , num2
      dimension num2(4) , num(4)
C
C     calculate a "priority", a number which is unique for any given
C     i j k l.  ijkpri is used by various routines in the process
C     of deciding which of several symmetrically related possibilites
C     to choose.
C     currently ijkpri is unique for max(i,j,k,l) <= 120.
C
C
C                                sort i, j, k, l into the order
C                                i>= j >= k >= l
      num2(1) = I
      num2(2) = J
      num2(3) = K
      num2(4) = L
      do 100 loop1 = 1 , 4
         num(loop1) = max0(num2(1),num2(2),num2(3),num2(4))
         do 50 loop2 = 1 , 4
            if ( num(loop1).eq.num2(loop2) ) then
               num2(loop2) = -1
               goto 100
            endif
C
 50      continue
 100  continue
C                                 compute the priority.
      ijkpri = 0
      do 200 loop = 1 , 4
         ijkpri = ijkpri + num(loop)*120**(4-loop)
 200  continue
C
      return
C
      end
@* INDEX.
