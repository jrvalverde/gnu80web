@* diablo.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] NBASIS                                                    
\item[INPUT:] E                                                         
\item[PASSED:] DD                                                        
\item[PASSED:] X                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    A       B                                              
\item[Transmits as argument]  CMP     MDIM    NSE                                    
\item[Uses]  A       B       CMP     IOUT    MDIM    MDSQ    MTT    
             NSE     NSEP    ZERO                                   
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       DIAGD   ILSW                                           
\item[Called by]   FIRST                                                  
                                                                    
\end{description}
@a
      subroutine diablo(NBASIS,E,DD,X)
      implicit none
      double precision A , B , Big , DD , E , ea , ei , Fillab , Four , 
     &                 One , Onept5 , Pt5 , Small , Three , Two , X , 
     &                 Zero
      integer i , i1 , i2 , ia , ii , In , ind , Iout , Ipunch , j , 
     &        Ksm , Kspin , Ksw , Mdim , Mdsq , minprt , mm , Mshifs , 
     &        Mtt , NBASIS
      integer Nesk , Nest , Nest1 , Nse , Nsep , nstb , Ntt , nv
      logical Cmp , Rhf
      dimension E(*) , DD(*) , X(*)
      common /con503/ Zero , Pt5 , One , Onept5 , Two , Three , Four , 
     &                Big , Small
      common /scfcon/ Cmp , Rhf , Ksm , Kspin , Ksw(2) , Nesk(2) , Nse , 
     &                Nsep , Nest , Nest1
      common /maxdm / Mdim , Mtt , Ntt , Mdsq , Mshifs
      common /memry / A(4970) , B(4970) , Fillab(40060)
      common /io    / In , Iout , Ipunch
C     ******************************************************************
C     diagonalizes a matrix constisting of two factorizing blocks
C     appearing on the diagonal
C     nse is the dimension of the first block, nbasis the dimension of
C     the whole matrix
C
C     may 76/rs9b
C     ******************************************************************
C
C
99001 format (' E(A) - E(I) IS NOT POSITIVE DEFINITE')
C     ******************************************************************
      call ilsw(2,21,minprt)
C
C     diagonalize first block
      call diagd(A,B,E,Nse,DD,X,Mdim,Cmp)
C
C     set lower left off-diagonal block of the eigenvectors to zero
      nv = NBASIS - Nse
      i1 = Nse
      do 100 i = 1 , Nse
         do 50 j = 1 , nv
            B(i1+j) = Zero
            if ( Cmp ) B(i1+Mdsq+j) = Zero
 50      continue
         i1 = i1 + Mdim
 100  continue
C
C     prepare second block for diagonalization
      mm = 0
      ind = Nse*Nsep/2 + Nse
      do 200 i = 1 , nv
         do 150 j = 1 , i
            mm = mm + 1
            A(mm) = A(ind+j)
            if ( Cmp ) A(mm+Mtt) = A(ind+Mtt+j)
 150     continue
         ind = ind + Nse + i
 200  continue
C
C     diagonalize second block
      nstb = Nse*Mdim + 1
      call diagd(A,B(nstb),E(Nsep),nv,DD,X,Mdim,Cmp)
C
C     shift eigenvectors of block 2 to their proper position
      i2 = Nse*Mdim + 1
      i1 = i2 + nv
      i2 = i2 + NBASIS
      do 300 i = 1 , nv
         do 250 j = 1 , nv
            B(i2-j) = B(i1-j)
            if ( Cmp ) B(i2+Mdsq-j) = B(i1+Mdsq-j)
 250     continue
         i1 = i1 + Mdim
         i2 = i2 + Mdim
 300  continue
C
C     set right upper block of the eigenvectormatrix to zero
      i1 = Nse*Mdim
      do 400 i = 1 , nv
         do 350 j = 1 , Nse
            B(i1+j) = Zero
            if ( Cmp ) B(i1+j+Mdsq) = Zero
 350     continue
         i1 = i1 + Mdim
 400  continue
C
C     ******************************************************************
C     inspect if gamma(a)-gamma(i) positive definite
C     ******************************************************************
C
      if ( minprt.ne.0 ) return
      do 500 ii = 1 , Nse
         ei = E(ii)
         do 450 ia = Nsep , NBASIS
            ea = E(ia)
            if ( ea.le.ei ) then
               write (Iout,99001)
               return
            endif
C
 450     continue
 500  continue
C
      return
C
      end
@* INDEX.
