@* matrc3.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] A                                                         
\item[INPUT:] B                                                         
\item[OUTPUT:] C                                                         
\item[INPUT:] L                                                         
\item[INPUT:] M                                                         
\item[INPUT:] N                                                         
\item[INPUT:] MODE                                                      
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]   NOTHING                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]        NOTHING                                           
\item[Called by]   CYCPHF                                                 
                                                                    
\end{description}
@a
      subroutine matrc3(A,B,C,L,M,N,MODE)
      implicit none
      double precision A , acc , B , C , zero
      integer i , j , k , L , M , MODE , N
      dimension A(70,70) , B(70,70) , C(70,70)
      data zero/0.0D0/
C
C
C
C         mode = 1  :  c=a*b
C
C              = 2  :  c=a(transpose)*b
C
C              = 3  :  c=a*b(transpose)
C
C       where c(lxn), a(lxm), b(mxn)  after any transpositions
C
C
C
      if ( MODE.lt.2 ) then
C
         do 50 i = 1 , L
            do 20 j = 1 , N
               acc = zero
               do 10 k = 1 , M
                  acc = acc + (A(i,k)*B(k,j))
 10            continue
               C(i,j) = acc
 20         continue
 50      continue
      elseif ( MODE.eq.2 ) then
C
         do 100 i = 1 , L
            do 80 j = 1 , N
               acc = zero
               do 60 k = 1 , M
                  acc = acc + (A(k,i)*B(k,j))
 60            continue
               C(i,j) = acc
 80         continue
 100     continue
      else
C
         do 150 i = 1 , L
            do 120 j = 1 , N
               acc = zero
               do 110 k = 1 , M
                  acc = acc + (A(i,k)*B(j,k))
 110           continue
               C(i,j) = acc
 120        continue
 150     continue
      endif
C
      return
C
      end
@* INDEX.
