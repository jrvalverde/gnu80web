@* geta.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[PASSED:] E                                                         
\item[PASSED:] METHOD                                                    
\item[PASSED:] ISCHEM                                                    
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Transmits as argument]  IAD1    IAD2    IAD3    IAS1    IAS2    IDB1    IDB2   
             IDB3    IWD1    IWD2    IWD3    IWS1    IWS2    NOA    
             NOB     NOVAB   NVA     NVB                            
\item[Uses]  IAD1    IAD2    IAD3    IAS1    IAS2    IDB1    IDB2   
             IDB3    IOPCL   IWD1    IWD2    IWD3    IWS1    IWS2   
             MDV     NOA     NOB     NOVAB   NRORB   NVA     NVB    
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       DEFBUC  EXPOL   FILEIO  GETDE   MATTRN  TRACK   WTOADA 
             WTOADB  WTOAS                                          
\item[Called by]   CIDS5                                                  
                                                                    
\end{description}
@a
      subroutine geta(E,METHOD,ISCHEM)
      implicit none
      double precision E , V
      integer Iad1 , Iad2 , Iad3 , Ias1 , Ias2 , Idb1 , Idb10 , Idb2 , 
     &        Idb3 , Idb4 , Idb5 , Idb6 , Idb7 , Idb8 , Idb9 , Idmm , 
     &        Ieval , ilocal , Ioab , Iopcl
      integer ISCHEM , Iscr1 , Iscr2 , Iscr3 , Iscr4 , Iscr5 , Iscr6 , 
     &        Iscrd , Ispect , Iwd1 , Iwd2 , Iwd3 , Iws1 , Iws2 , Loab , 
     &        Lspect , Maxbuc , Mdv , mdv2 , METHOD
      integer nb1 , Noa , Noa2 , Noa3 , Noaob , Noava , Noavb , Nob , 
     &        Nob2 , Nob3 , Nobva , Nobvb , Novaa , Novab , Novbb , 
     &        Nrorb , Nva , Nva2 , Nva3 , Nvavb
      integer Nvb , Nvb2 , Nvb3
      dimension E(*)
      common /v     / V(20000) , Mdv
      common /orb   / Ispect , Lspect , Nrorb , Noa , Nva , Nob , Nvb , 
     &                Noaob , Noava , Noavb , Nobva , Nobvb , Nvavb , 
     &                Noa2 , Noa3 , Nob2 , Nob3 , Nva2 , Nva3 , Nvb2 , 
     &                Nvb3 , Novaa , Novab , Novbb , Maxbuc , Ieval , 
     &                Ioab , Loab
      common /constr/ Iopcl
      common /bucknr/ Idb1 , Idb2 , Idb3 , Idb4 , Idb5 , Idb6 , Idb7 , 
     &                Idb8 , Idb9 , Idb10 , Idmm(11) , Iad1 , Iad2 , 
     &                Iad3 , Ias1 , Ias2 , Iwd1 , Iwd2 , Iwd3 , Iws1 , 
     &                Iws2 , Iscr1 , Iscr2 , Iscr3 , Iscr4 , Iscr5 , 
     &                Iscr6 , Iscrd(13)
      data ilocal/3333/
C
C     ******************************************************************
C
C     proceeds to call the subroutines which form a new a-vector from
C     a given w-vector
C
C     march 77/seeger
C
C     ******************************************************************
C
C
C
C     define local scratch bucket.
C
      call track('GETA  ')
C
      mdv2 = Mdv/2
C
C     get de for the energy denominator
      call getde(METHOD,ISCHEM)
C
C     extrapolate a(0) and de, and evaluate coefficient for the
C     extrapolation of the wavefunction
      call expol
C
C     get 'new' a-vector
      nb1 = Nrorb + 1
C
C     doubles
      call wtoada(Iwd1,Iad1,Idb1,E,Noa,Nva)
C
C     transpose idb2 in local scratch bucket ilocal. this is
C     necessary in wtoadb which expects the integrals (ij//ab)
C     in the sequence i,j,a,b.
C
      call defbuc(ilocal,Novab)
      call mattrn(Noa,Nva,Nob,Nvb,2,Idb2,ilocal,mdv2)
C
      call wtoadb(Iwd2,Iad2,ilocal,E,E(nb1))
C
C     release local bucket ilocal.
      call fileio(5,ilocal,0,0,0)
C
      if ( Iopcl.ne.0 ) call wtoada(Iwd3,Iad3,Idb3,E(nb1),Nob,Nvb)
C
C     singles
      call wtoas(Iws1,Ias1,E,Noa,Nva)
      if ( Iopcl.ne.0 ) call wtoas(Iws2,Ias2,E(nb1),Nob,Nvb)
C
      return
C
      end
@* INDEX.
