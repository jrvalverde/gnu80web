@* zprint.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] NZ                                                        
\item[INPUT:] IANZ                                                      
\item[INPUT:] IZ                                                        
\item[INPUT:] BL                                                        
\item[INPUT:] ALPHA                                                     
\item[INPUT:] BETA                                                      
\item[INPUT:] CONVER                                                    
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]  IOUT                                                   
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GATAN                                                  
\item[Called by]   FRCOUT  GEOM                                           
                                                                    
\end{description}
@a
      subroutine zprint(NZ,IANZ,IZ,BL,ALPHA,BETA,CONVER)
      implicit none
      double precision ALPHA , BETA , BL , CONVER , f45 , gatan , one , 
     &                 pa , pb , pbl , todeg
      integer IANZ , icard , icent , idx , iel , In , Iout , Ipunch , 
     &        IZ , np1 , np2 , np3 , NZ
      dimension IANZ(*) , BL(*) , ALPHA(*) , BETA(*)
      dimension IZ(50,4)
      dimension iel(106)
C      dimension iel(38)
      common /io    / In , Iout , Ipunch
      data one , f45/1.0D0 , 45.0D0/
C      data iel/2hx ,2hbq,2hh ,2hhe,2hli,2hbe,2hb ,2hc ,2hn ,2ho ,2hf ,
C     +     2hne,2hna,2hmg,2hal,2hsi,2hp ,2hs ,2hcl,2har,2hk ,2hca,2hsc,
C     +     2hti,2hv ,2hcr,2hmn,2hfe,2hco,2hni,2hcu,2hzn,2hga,2hge,2has,
C     +     2hse,2hbr,2hkr/
      data iel/'X ' , 'Bq' , 'H ' , 'He' , 'Li' , 'Be' , 'B ' , 'C ' , 
     &     'N ' , 'O ' , 'F ' , 'Ne' , 'Na' , 'Mg' , 'Al' , 'Si' , 
     &     'P ' , 'S ' , 'Cl' , 'Ar' , 'K ' , 'Ca' , 'Sc' , 'Ti' , 
     &     'V ' , 'Cr' , 'Mn' , 'Fe' , 'Co' , 'Ni' , 'Cu' , 'Zn' , 
     &     'Ga' , 'Ge' , 'As' , 'Se' , 'Br' , 'Kr' , 'Rb' , 'Sr' , 
     &     'Y ' , 'Zr' , 'Nb' , 'Mo' , 'Tc' , 'Ru' , 'Rh' , 'Pd' , 
     &     'Ag' , 'Cd' , 'In' , 'Sn' , 'Sb' , 'Te' , 'I ' , 'Xe' , 
     &     'Cs' , 'Ba' , 'La' , 'Ce' , 'Pr' , 'Nd' , 'Pm' , 'Sm' , 
     &     'Eu' , 'Gd' , 'Tb' , 'Dy' , 'Ho' , 'Er' , 'Tm' , 'Yb' , 
     &     'Lu' , 'Hf' , 'Ta' , 'W ' , 'Re' , 'Os' , 'Ir' , 'Pt' , 
     &     'Au' , 'Hg' , 'Tl' , 'Pb' , 'Bi' , 'Po' , 'At' , 'Rn' , 
     &     'Fr' , 'Ra' , 'Ac' , 'Th' , 'Pa' , 'U ' , 'Np' , 'Pu' , 
     &     'Am' , 'Cm' , 'Bk' , 'Cf' , 'Es' , 'Fm' , 'Md' , 'No' , 
     &     'Lr' , 'Ky'/
C
C
C      z-matrix printing routine.
C      converts from internal (bohr/radian) units to external
C      (angstrom/degree) units locally for printing using conver.
C
C
C
C
C
C      note that lower case letters are used in the atomic symbols
C      and in some of the format statements in hollereith strings.
C
C
99001 format (1x,72('-'))
99002 format (1x,24x,'Z-MATRIX (ANGSTROMS AND DEGREES)')
99003 format (1x,'CD CENT ATOM  N1',6x,'LENGTH',6x,'N2',5x,'ALPHA',6x,
     &        'N3',6x,'BETA',7x,'J')
99004 format (1x,i2,2x,i2,3x,a2)
99005 format (1x,i2,7x,a2)
99006 format (1x,i2,2x,i2,3x,a2,3x,i2,2x,f9.6,' (',i3,')')
99007 format (1x,i2,7x,a2,3x,i2,2x,f9.6,' (',i3,')')
99008 format (1x,i2,2x,i2,3x,a2,3x,i2,2x,f9.6,' (',i3,') ',i2,1x,f8.3,
     &        ' (',i3,')')
99009 format (1x,i2,7x,a2,3x,i2,2x,f9.6,' (',i3,') ',i2,1x,f8.3,' (',i3,
     &        ')')
99010 format (1x,i2,2x,i2,3x,a2,3x,i2,2x,f9.6,' (',i3,') ',i2,1x,f8.3,
     &        ' (',i3,') ',i2,1x,f8.3,' (',i3,') ',i2)
99011 format (1x,i2,7x,a2,3x,i2,2x,f9.6,' (',i3,') ',i2,1x,f8.3,' (',i3,
     &        ') ',i2,1x,f8.3,' (',i3,') ',i2)
C
C
      todeg = f45/gatan(one)
C
C     print the heading.
C
      write (Iout,99001)
      write (Iout,99002)
      write (Iout,99003)
      write (Iout,99001)
C
C     first card of z-matrix.
C
      icard = 1
      idx = IANZ(1) + 2
      if ( IANZ(1).lt.0 ) then
C
         icent = 0
         write (Iout,99005) icard , iel(idx)
      else
         icent = 1
         write (Iout,99004) icard , icent , iel(idx)
      endif
      if ( NZ.ne.1 ) then
C
C     second card of the z-matrix.
C
         np1 = 1
         icard = 2
         idx = IANZ(2) + 2
         pbl = BL(2)*CONVER
         if ( IANZ(2).lt.0 ) then
C
            write (Iout,99007) icard , iel(idx) , IZ(2,1) , pbl , np1
         else
            icent = icent + 1
            write (Iout,99006) icard , icent , iel(idx) , IZ(2,1) , 
     &                         pbl , np1
         endif
         if ( NZ.ne.2 ) then
C
C     third card.
C
            np1 = 2
            np2 = NZ
            icard = 3
            idx = IANZ(3) + 2
            pbl = BL(3)*CONVER
            pa = ALPHA(3)*todeg
            if ( IANZ(3).lt.0 ) then
C
               write (Iout,99009) icard , iel(idx) , IZ(3,1) , pbl , 
     &                            np1 , IZ(3,2) , pa , np2
            else
               icent = icent + 1
               write (Iout,99008) icard , icent , iel(idx) , IZ(3,1) , 
     &                            pbl , np1 , IZ(3,2) , pa , np2
            endif
            if ( NZ.ne.3 ) then
C
C     cards 4 through nz.
C
               do 10 icard = 4 , NZ
                  np1 = icard - 1
                  np2 = NZ + icard - 3
                  np3 = NZ*2 + icard - 6
                  idx = IANZ(icard) + 2
                  pbl = BL(icard)*CONVER
                  pa = ALPHA(icard)*todeg
                  pb = BETA(icard)*todeg
                  if ( IANZ(icard).lt.0 ) then
C
                     write (Iout,99011) icard , iel(idx) , IZ(icard,1) , 
     &                                  pbl , np1 , IZ(icard,2) , pa , 
     &                                  np2 , IZ(icard,3) , pb , np3 , 
     &                                  IZ(icard,4)
                  else
                     icent = icent + 1
                     write (Iout,99010) icard , icent , iel(idx) , 
     &                                  IZ(icard,1) , pbl , np1 , 
     &                                  IZ(icard,2) , pa , np2 , 
     &                                  IZ(icard,3) , pb , np3 , 
     &                                  IZ(icard,4)
                  endif
 10            continue
            endif
         endif
      endif
C
C     print the trailer.
C
      write (Iout,99001)
C
      return
C
      end
@* INDEX.
