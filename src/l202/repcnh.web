@* repcnh.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] N                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    ICNT    ISAVE   NSAVE                                  
\item[Uses]  NSAVE                                                  
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       LABREP  PUTTBL                                         
\item[Called by]   INIREP                                                 
                                                                    
\end{description}
@a
      subroutine repcnh(N)
C ----------------------------------------------------------------------
      implicit none
      double precision c2htbl , c3htbl , c4htbl , c6htbl
      integer Icnt , Isave , N , nc2h , nc3h , nc4h , nc6h , Nsave
      dimension c2htbl(3,4)
      dimension c3htbl(3,4)
      dimension c4htbl(3,6)
      dimension c6htbl(3,8)
      common /reploc/ Nsave , Icnt , Isave(15)
      data nc2h/4/
C      data c2htbl/'ag',1.0,1.0,'au',1.0,-1.0,'bg',-1.0,-1.0,'bu',-1.0,
C     +     1.0/
      data c2htbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     -1.0 , 0.0 , -1.0 , 1.0/
      data nc3h/4/
C      data c3htbl/'a''',1.0,1.0,'a"',1.0,-1.0,'e''',-1.0,2.0,'e"',-1.0,
C     +     -2.0/
      data c3htbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     2.0 , 0.0 , -1.0 , -2.0/
c      data c4htbl/'ag',1.0,1.0,'au',1.0,-1.0,'bg',-1.0,1.0,'bu',-1.0,
c     +     -1.0,'eg',-2.0,-2.0,'eu',-2.0,2.0/
      data c4htbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , 0.0 , -1.0 , -1.0 , 0.0 , -2.0 , -2.0 , 0.0 , -2.0 , 
     &     2.0/
      data nc6h/8/
C      data c6htbl/'ag',1.0,1.0,'au',1.0,-1.0,'bg',-1.0,-1.0,'bu',-1.0,
C     +     1.0,'e1g',1.0,-2.0,'e1u',1.0,2.0,'e2g',-1.0,2.0,'e2u',-1.0,
C     +     -2.0/
      data c6htbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     -1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 1.0 , -2.0 , 0.0 , 1.0 , 
     &     2.0 , 0.0 , -1.0 , 2.0 , 0.0 , -1.0 , -2.0/
C          this routine sets up what it can in /repcom/ for
C     cnh point groups.  these groups have 2n symmetry operations,
C     and these are generated by "oper" in the order:
C
C                  e, (n-1)cn, sigmah, (n-1) sigmah * cn
C
C     for these groups, we will save the first cn axis, and
C     the sigmah plane.
C     r. a. whiteside - august 1979
C ----------------------------------------------------------------------
C
C                              the hollerith strings in these data
C                              statements are not used, but are
C                              included for their value as comments.
C
C                              character table for c2h.
C                            cn    sigma
C                          ----------------
C
C                              character table for c3h.
C
C                              character table for c4h.
C      data nc4h/6/
C
C                              character table for c6h.
C
C                              first, indicate in /reploc/ the
C                              sequence numbers of the operations
C                              to be saved.  do this even if we
C                              don't know the character table for
C                              the point group.
      Icnt = 0
      Nsave = 2
      Isave(1) = 1
      Isave(2) = N
C
C                              now, see if we can fill /repcom/ with
C                              the character table for this point
C                              group.
      if ( N.eq.2 ) then
         call puttbl(Nsave+1,nc2h,c2htbl)
         call labrep('AG,AU,BG,BU,',4)
         return
C
      elseif ( N.eq.3 ) then
         call puttbl(Nsave+1,nc3h,c3htbl)
         call labrep('A'',A",E'',E",',4)
         return
C
      elseif ( N.eq.4 ) then
         call puttbl(Nsave+1,nc4h,c4htbl)
         call labrep('AG,AU,BG,BU,EG,EU,',6)
         return
C
      elseif ( N.eq.6 ) then
         call puttbl(Nsave+1,nc6h,c6htbl)
         call labrep('AG,AU,BG,BU,E1G,E1U,E2G,E2U,',8)
         return
      endif
C
      call puttbl(Nsave+1,0,0)
      return
C
      end
@* INDEX.
