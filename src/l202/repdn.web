@* repdn.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] N                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    ICNT    ISAVE   NSAVE                                  
\item[Uses]  NSAVE                                                  
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       LABREP  PUTTBL                                         
\item[Called by]   INIREP                                                 
                                                                    
\end{description}
@a
      subroutine repdn(N)
C ----------------------------------------------------------------------
      implicit none
      integer Icnt , Isave , N , nd2 , nd3 , nd4 , nd6 , Nsave
      double precision d2tbl(3,4) , d3tbl(3,3)
      double precision d4tbl(3,5) , d6tbl(3,6)
      common /reploc/ Nsave , Icnt , Isave(15)
      data nd2/4/
C      data d2tbl/'a',1.0,1.0,'b1',1.0,-1.0,'b2',-1.0,1.0,'b3',-1.0,-1.0/
      data d2tbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 1.0 , 
     &     0.0 , -1.0 , -1.0/
      data nd3/3/
C      data d3tbl/'a1',1.0,1.0,'a2',1.0,-1.0,'e',-1.0,0.0/
      data d3tbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 0.0/
      data nd4/5/
C      data d4tbl/'a1',1.0,1.0,'a2',1.0,-1.0,'b1',-1.0,1.0,'b2',-1.0,
C     +     -1.0,'e',0.0,0.0/
      data d4tbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 1.0 , 
     &     0.0 , -1.0 , -1.0 , 0.0 , 0.0 , 0.0/
      data nd6/6/
C      data d6tbl/'a1',1.0,1.0,'a2',1.0,-1.0,'b1',-1.0,1.0,'b2',-1.0,
C     +     -1.0,'e1',1.0,0.0,'e2',-1.0,0.0/
      data d6tbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 1.0 , 
     &     0.0 , -1.0 , -1.0 , 0.0 , 1.0 , 0.0 , 0.0 , -1.0 , 0.0/
C          this routine sets up what it can in /repcom/ for
C     dn point groups.  these groups have 2n symmetry operations,
C     and these are generated by "oper" in the order:
C
C                      e, (n-1)cn, n-c2.
C
C     for these groups, we will save the first cn axis, one of
C     the c2 axes, and the sigmah plane.
C     r. a. whiteside - august 1979
C --------------------------------------------------------------------
C
C                              the hollerith strings in the data
C                              statements below are not used by any
C                              code, but are included for their
C                              value as comments.
C
C                              character table for d2.
C
C                              character table for d3.
C
C                              character table for d4.
C
C
C                              character table for d6.
C
C
C                              first, indicate in /reploc/ the
C                              sequence numbers of the operations
C                              to be saved.  do this even if we
C                              don't know the character table for
C                              the point group.
      Icnt = 0
      Nsave = 2
      Isave(1) = 1
      Isave(2) = N
C
C                              now, see if we can fill /repcom/ with
C                              the character table for this point
C                              group.
      if ( N.eq.2 ) then
         call puttbl(Nsave+1,nd2,d2tbl)
         call labrep('A,B1,B2,B3,',4)
         return
C
      elseif ( N.eq.3 ) then
         call puttbl(Nsave+1,nd3,d3tbl)
         call labrep('A1,A2,E,',3)
         return
C
      elseif ( N.eq.4 ) then
         call puttbl(Nsave+1,nd4,d4tbl)
         call labrep('A1,A2,B1,B2,E,',5)
         return
C
      elseif ( N.eq.6 ) then
         call puttbl(Nsave+1,nd6,d6tbl)
         call labrep('A1,A2,B1,B2,E1,E2,',6)
         return
      endif
C
      call puttbl(Nsave+1,0,0)
      return
C
      end
@* INDEX.
