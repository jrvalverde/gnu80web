@* repdnd.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] N                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    ICNT    ISAVE   NSAVE                                  
\item[Uses]  NSAVE                                                  
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GSQRT   LABREP  PUTTBL                                 
\item[Called by]   INIREP                                                 
                                                                    
\end{description}
@a
      subroutine repdnd(N)
C ----------------------------------------------------------------------
      implicit none
      double precision d2dtbl , d3dtbl , d4dtbl , gsqrt , two
      integer Icnt , Isave , N , nd2d , nd3d , nd4d , Nsave
      dimension d2dtbl(3,5)
      dimension d3dtbl(3,6)
      dimension d4dtbl(3,7)
      common /reploc/ Nsave , Icnt , Isave(15)
      data two/2.0D0/
      data nd2d/5/
C      data d2dtbl/'a1',1.0,1.0,'a2',-1.0,1.0,'b1',1.0,-1.0,'b2',-1.0,
C     +     -1.0,'e',0.0,0.0/
      data d2dtbl/0.0 , 1.0 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 1.0 , 
     &     -1.0 , 0.0 , -1.0 , -1.0 , 0.0 , 0.0 , 0.0/
      data nd3d/6/
C      data d3dtbl/'a1g',1.0,1.0,'a1u',1.0,-1.0,'a2g',-1.0,1.0,'a2u',
C     +     -1.0,-1.0,'eg',0.0,-1.0,'eu',0.0,1.0/
      data d3dtbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , 0.0 , -1.0 , -1.0 , 0.0 , 0.0 , -1.0 , 0.0 , 0.0 , 1.0/
      data nd4d/7/
C      data d4dtbl/'a1',1.0,1.0,'a2',-1.0,1.0,'b1',1.0,-1.0,'b2',-1.0,
C     +     -1.0,'e1',0.0,'??','e2',0.0,0.0,'e3',0.0,'??'/
      data d4dtbl/0.0 , 1.0 , 1.0 , 0.0 , -1.0 , 1.0 , 0.0 , 1.0 , 
     &     -1.0 , 0.0 , -1.0 , -1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 
     &     0.0 , 0.0 , 0.0 , 0.0/
C          this routine sets up what it can in /repcom/ for
C     dnd point groups.  these groups have 4n symmetry operations,
C     and these are generated by "oper" in the order:
C
C                  e, nc2, n sigmad, (2n-1)s2n
C
C     for these groups, we will save the first s2n axis, and the
C     first c2 axis.
C     r. a. whiteside - august 1979
C ----------------------------------------------------------------------
C
C                              the hollerith strings in the data
C                              statements below are not used by code,
C                              but are included for their value
C                              as comments.
C
C                              character table for d2d.
C
C                              character table for d3d.
C
C                              character table for d4d.
C                              some values filled in code below.
C
C                              first, indicate in /reploc/ the
C                              sequence numbers of the operations
C                              to be saved.  do this even if we
C                              don't know the character table for
C                              the point group.
      Icnt = 0
      Nsave = 2
      Isave(1) = 1
      Isave(2) = 2*N + 1
C
C                              now, see if we can fill /repcom/ with
C                              the character table for this point
C                              group.
      if ( N.eq.2 ) then
         call puttbl(Nsave+1,nd2d,d2dtbl)
         call labrep('A1,A2,B1,B2,E,',5)
         return
C
      elseif ( N.eq.3 ) then
         call puttbl(Nsave+1,nd3d,d3dtbl)
         call labrep('A1G,A1U,A2G,A2U,EG,EU,',6)
         return
C
      elseif ( N.eq.4 ) then
         d4dtbl(3,5) = gsqrt(two)
         d4dtbl(3,7) = -gsqrt(two)
         call puttbl(Nsave+1,nd4d,d4dtbl)
         call labrep('A1,A2,B1,B2,E1,E2,E3,',7)
         return
      endif
C
      call puttbl(Nsave+1,0,0)
      return
C
      end
@* INDEX.
