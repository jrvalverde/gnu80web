@* repcnv.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] N                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    ICNT    ISAVE   NSAVE                                  
\item[Uses]  NSAVE                                                  
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GATAN   GCOS    LABREP  PUTTBL                         
\item[Called by]   INIREP                                                 
                                                                    
\end{description}
@a
      subroutine repcnv(N)
C ----------------------------------------------------------------------
      implicit none
      double precision f144 , f180 , f72 , four , gatan , gcos , one , 
     &                 pi , two
      integer Icnt , Isave , N , nc2v , nc3v , nc4v , nc5v , nc6v , 
     &        Nsave
      double precision c2vtbl(3,4) , c3vtbl(3,3)
      double precision c4vtbl(3,5) , c6vtbl(3,6)
      double precision c5vtbl(3,4)
      common /reploc/ Nsave , Icnt , Isave(15)
      data nc2v/4/
C      data c2vtbl/'a1',1.0,1.0,'a2',1.0,-1.0,'b1',-1.0,1.0,'b2',-1.0,
C     +     -1.0/
      data c2vtbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , 0.0 , -1.0 , -1.0/
      data nc3v/3/
C      data c3vtbl/'a1',1.0,1.0,'a2',1.0,-1.0,'e',-1.0,0.0/
      data c3vtbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 0.0/
      data nc4v/5/
C      data c4vtbl/'a1',1.0,1.0,'a2',1.0,-1.0,'b1',-1.0,1.0,'b2',-1.0,
C     +     -1.0,'e',0.0,0.0/
      data c4vtbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , 0.0 , -1.0 , -1.0 , 0.0 , 0.0 , 0.0/
      data nc5v/4/
C      data c5vtbl/'a1',1.0,1.0,'a2',1.0,-1.0,'e1',0.0,0.0,'e2',0.0,0.0/
      data c5vtbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , 0.0 , 0.0 , 
     &     0.0 , 0.0 , 0.0/
      data nc6v/6/
C      data c6vtbl/'a1',1.0,1.0,'a2',1.0,-1.0,'b1',-1.0,1.0,'b2',-1.0,
C     +     -1.0,'e1',1.0,0.0,'e2',-1.0,0.0/
      data c6vtbl/0.0 , 1.0 , 1.0 , 0.0 , 1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , 0.0 , -1.0 , -1.0 , 0.0 , 1.0 , 0.0 , 0.0 , -1.0 , 0.0/
      data one/1.0D0/ , two/2.0D0/ , four/4.0D0/
      data f72/72.0D0/ , f144/144.0D0/ , f180/180.0D0/
C          this routine sets up what it can in /repcom/ for
C     cnv point groups.  these groups have 2n symmetry operations,
C     and these are generated by "oper" in the order:
C
C                  e, (n-1)cn, n-sigmav.
C
C     for these groups, we will save the first cn axis, and
C     the second mirror plane.
C     r. a. whiteside - august 1979
C ----------------------------------------------------------------------
C
C                              the hollerith strings in these data
C                              statements ar not used, but are included
C                              for their value as comments.
C
C                              character table for c2v.
C
C                              character table for c3v.
C
C                              character table for c4v.
C
C                              character table for c5v.
C                              some values filled by code below.
C
C                              character table for c6v.
C
C
C                              first, indicate in /reploc/ the
C                              sequence numbers of the operations
C                              to be saved.  do this even if we
C                              don't know the character table for
C                              the point group.
      Icnt = 0
      Nsave = 2
      Isave(1) = 1
      Isave(2) = N + 1
C
C                              now, see if we can fill /repcom/ with
C                              the character table for this point
C                              group.
      if ( N.eq.2 ) then
         call puttbl(Nsave+1,nc2v,c2vtbl)
         call labrep('A1,A2,B1,B2,',4)
         return
C
      elseif ( N.eq.3 ) then
         call puttbl(Nsave+1,nc3v,c3vtbl)
         call labrep('A1,A2,E,',3)
         return
C
      elseif ( N.eq.4 ) then
         call puttbl(Nsave+1,nc4v,c4vtbl)
         call labrep('A1,A2,B1,B2,E,',5)
         return
C
      elseif ( N.eq.5 ) then
         pi = four*gatan(one)
         c5vtbl(2,3) = two*gcos(f72*pi/f180)
         c5vtbl(2,4) = two*gcos(f144*pi/f180)
         call puttbl(Nsave+1,nc5v,c5vtbl)
         call labrep('A1,A2,E1,E2,',4)
         return
C
      elseif ( N.eq.6 ) then
         call puttbl(Nsave+1,nc6v,c6vtbl)
         call labrep('A1,A2,B1,B2,E1,E2,',6)
         return
      endif
C
      call puttbl(Nsave+1,0,0)
      return
C
      end
@* INDEX.
