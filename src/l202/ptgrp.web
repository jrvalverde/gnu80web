@* ptgrp.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] MAXAP3                                                    
\item[OUTPUT:] A                                                         
\item[PASSED:] B                                                         
\item[INPUT:] C                                                         
\item[PASSED:] D                                                         
\item[PASSED:] IAN                                                       
\item[PASSED:] ATMCHG                                                    
\item[INPUT:] NATOMS                                                    
\item[INPUT:] IPRINT                                                    
\item[INPUT:] IDUMP                                                     
\item[OUTPUT:] NGRP                                                      
\item[OUTPUT:] TRVEC                                                     
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]  IOUT    TOL2                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       CENTER  EQUIV   FINDC2  FINDCN  FINDV   GABS    GATAN  
             ILSW    INVERT  IORD    MOVE    NUM     ORAXIS  ORC2V  
             ORCN    ORD2H   ORDN    ORPLAN  ORPTST  PUT     REFLCT 
             ROTATE  SECMOM  SPHERE                                 
\item[Called by]   SYMM                                                   
                                                                    
\end{description}
@a
      subroutine ptgrp(MAXAP3,A,B,C,D,IAN,ATMCHG,NATOMS,IPRINT,IDUMP,
     &                 NGRP,TRVEC)
      implicit none
      double precision A , ATMCHG , B , C , D , four , gabs , gatan , 
     &                 halfpi , one , pi , piovr4 , praxes , prmom , t , 
     &                 theta , Tol2 , Toler , TRVEC , tst1
      double precision tst2 , tst3 , two , v , zero
      integer i , IAN , iat , IDUMP , ihop , In , iord , Iout , IPRINT , 
     &        Ipunch , itop , itst , ixyz , iytst , iztst , j , MAXAP3 , 
     &        NATOMS , NGRP , norder
      integer npop , nset , num , numatm
C2ptgrp
      dimension A(MAXAP3,3) , B(MAXAP3,3) , C(100,3) , D(MAXAP3,3)
      dimension ATMCHG(*) , NGRP(4) , TRVEC(3) , IAN(*)
      dimension prmom(3) , praxes(3,3)
      dimension npop(100) , nset(100)
      dimension t(3,3) , v(3)
      common /io    / In , Iout , Ipunch
      common /tol   / Toler , Tol2
      data zero , one , two , four/0.0D0 , 1.0D0 , 2.0D0 , 4.0D0/
C
C
C     given the coordinates, c, and the atomic numbers or masses,
C     atmchg, of the natoms atoms in a molecule, determine the point
C     group and impose a standard orientation in cartesian space.  the
C     coordinates of the re-oriented molecule are returned in a and
C     the schonflies symbol for the point group is placed in ngrp.
C     b and d are scratch coordinate arrays while iprint and idump
C     are print switches.
C
C
C
C
C
99001 format (1x,'PTGRP-- TRANSLATION VECTOR:',3F12.6)
99002 format (1x,'PTGRP-- PRINCIPAL MOMENTS AND AXES OF CHARGE:'/1x,
     &        '        MOMENTS:',3F12.7,/1x,'        AXES   :',
     &        3F12.6/17x,3F12.6/17x,3F12.6)
99003 format (1x,'PTGRP-- THE MOLECULE IS LINEAR')
99004 format (1x,'PTGRP-- THE MOLECULE IS NOT LINEAR')
99005 format (1x,'PTGRP-- THE MOLECULE IS AN ASYMMETRIC TOP')
99006 format (1x,'PTGRP-- THE MOLECULE IS A SYMMETRIC TOP')
99007 format (1x,'PTGRP-- THE MOLECULE IS A SPHERICAL TOP')
99008 format (1x,'PTGRP-- THE MOLECULE IS AN ACCIDENTAL SPHERICAL TOP',
     &        /1x,'PTGRP-- SYMMETRY TURNED OFF')
99009 format (1x,'PTGRP-- THE MOLECULE IS AN ACCIDENTAL SYMMETRIC TOP',
     &        /1x,'PTGRP-- SYMMETRY TURNED OFF')
C
C
      piovr4 = gatan(one)
      pi = four*piovr4
      halfpi = two*piovr4
C
C     add three dummy atoms to trace the rotations of the molecule.
C
      numatm = NATOMS + 3
      do 100 iat = 1 , NATOMS
         A(iat,1) = C(iat,1)
         A(iat,2) = C(iat,2)
         A(iat,3) = C(iat,3)
 100  continue
      do 200 iat = 1 , 3
         do 150 ixyz = 1 , 3
            A(NATOMS+iat,ixyz) = zero
 150     continue
 200  continue
      A(NATOMS+1,1) = one
      A(NATOMS+2,2) = one
      A(NATOMS+3,3) = one
C
C     all symmetry elements must pass through the molecules charge
C     center.  translate the molecule so that this unique point is
C     at the origin of the fixed cartesian coordinate system.
C
      call center(MAXAP3,NATOMS,A,ATMCHG,TRVEC)
      TRVEC(1) = -TRVEC(1)
      TRVEC(2) = -TRVEC(2)
      TRVEC(3) = -TRVEC(3)
      if ( IPRINT.ne.0 ) write (Iout,99001) (TRVEC(i),i=1,3)
      if ( IDUMP.ne.0 ) write (Iout,99010)
      do 300 iat = 1 , NATOMS
         A(iat,1) = A(iat,1) + TRVEC(1)
         A(iat,2) = A(iat,2) + TRVEC(2)
         A(iat,3) = A(iat,3) + TRVEC(3)
         if ( IDUMP.ne.0 ) write (Iout,99011) (A(iat,i),i=1,3)
 300  continue
C
99010 format (' PTGRP-- COORDINATES AFTER TRANSLATION: ')
99011 format (' PTGRP-- ',3G15.4)
C
C     calculate the principal moments and axes of charge.
C
      call secmom(MAXAP3,NATOMS,A,ATMCHG,prmom,praxes)
      if ( IPRINT.ne.0 ) write (Iout,99002) (prmom(i),i=1,3) , 
     &                          ((praxes(j,i),i=1,3),j=1,3)
C
C     if the first moment is zero and the other two are equal,
C     the molecule is linear.
C
      if ( gabs(prmom(1)).gt.Tol2 .or. gabs(prmom(3)-prmom(2)).gt.Tol2 )
     &     then
C
C     classify the molecule as being a either a spherical top (itop=3),
C     a symmetric top (itop=2), or an asymmetric top(itop=1).  each
C     type of top will be handled seperately.
C
         if ( IDUMP.ne.0 ) write (Iout,99004)
         itop = 0
         tst1 = prmom(2) - prmom(3)
         tst2 = prmom(1) - prmom(3)
         tst3 = prmom(1) - prmom(2)
         if ( gabs(tst1).lt.Tol2 ) itop = itop + 1
         if ( gabs(tst2).lt.Tol2 ) itop = itop + 1
         if ( gabs(tst3).lt.Tol2 ) itop = itop + 1
         if ( itop.ne.3 ) itop = itop + 1
         if ( itop.eq.2 ) then
C
C     *-----------------------*
C      symmetric top molecules
C     *-----------------------*
C
C     these molecules can belong to any axial point group, thus
C     only the cubic point groups (t, td, th, o, oh, i, ih) are
C     impossible.  however, execpt in rare cases the unique axis
C     is a rotation axis of order 3 or greater.  this routine is not
C     coded to identify the point group of these rare species.
C
C     align the unique axis with the z axis.
C
            if ( IDUMP.ne.0 ) write (Iout,99006)
            if ( gabs(tst1).lt.Tol2 ) ixyz = 1
            if ( gabs(tst2).lt.Tol2 ) ixyz = 2
            if ( gabs(tst3).lt.Tol2 ) ixyz = 3
            call put(MAXAP3,A,B,t,praxes(1,ixyz),numatm,3)
            call oraxis(MAXAP3,A,B,NATOMS,ATMCHG,3)
C
C     test z for cn.
C         if n>1 then goto 330.
C         else quit.
C
            call findcn(MAXAP3,NATOMS,A,B,D,ATMCHG,npop,nset,3,norder)
            if ( norder.gt.1 ) then
C
C     the unique axis in a symmetric top molecule is a proper rotation
C     axis or order norder and is aligned with the cartesian z axis.
C
C     test z for s2n.
C         if no then continue.
C         else test for n dihedral planes.
C             if yes  then dnd.
C             if no   then s2n.
C     test for n c2 axes in the xy plane.
C         if no then continue at 400.
C         else test for a horizontal plane.
C             if yes  then dnh.
C             if no   then dn.
C
               theta = pi/norder
               call rotate(MAXAP3,A,B,NATOMS,t,3,theta)
               call reflct(MAXAP3,B,D,NATOMS,t,3)
               call equiv(MAXAP3,A,D,ATMCHG,NATOMS,itst)
               if ( itst.eq.0 ) then
C
                  call findc2(MAXAP3,A,B,D,npop,nset,ATMCHG,NATOMS,itst)
                  if ( itst.eq.0 ) then
C
C     for a symmetric top molecule the possible point groups
C     have been limited to cnv, cnh, and cn.
C
                     call findv(MAXAP3,A,B,D,NATOMS,npop,nset,ATMCHG,
     &                          itst)
                     if ( itst.eq.0 ) then
C
                        call reflct(MAXAP3,A,B,NATOMS,t,3)
                        call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                        NGRP(1) = iord('C')
                        NGRP(2) = num(norder,1)
                        NGRP(3) = num(norder,2)
                        if ( itst.ne.0 ) NGRP(4) = iord('H')
                        call orcn(MAXAP3,A,B,D,D,ATMCHG,npop,nset,
     &                            NATOMS,IDUMP)
                     else
                        NGRP(1) = iord('C')
                        NGRP(2) = num(norder,1)
                        NGRP(3) = num(norder,2)
                        NGRP(4) = iord('V')
                        call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,
     &                            norder,IDUMP)
                        if ( norder.eq.2 )
     &                       call orc2v(MAXAP3,A,B,NATOMS,ATMCHG)
                     endif
                  else
                     call reflct(MAXAP3,A,B,NATOMS,t,3)
                     call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                     if ( itst.eq.0 ) then
C
                        NGRP(1) = iord('D')
                        NGRP(2) = num(norder,1)
                        NGRP(3) = num(norder,2)
                        call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,
     &                            norder,IDUMP)
                     else
                        NGRP(1) = iord('D')
                        NGRP(2) = num(norder,1)
                        NGRP(3) = num(norder,2)
                        NGRP(4) = iord('H')
                        call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,
     &                            norder,IDUMP)
                        if ( norder.eq.2 )
     &                       call ord2h(MAXAP3,A,B,NATOMS,ATMCHG,IAN)
                     endif
                  endif
               else
                  call findv(MAXAP3,A,B,D,NATOMS,npop,nset,ATMCHG,itst)
                  if ( itst.eq.0 ) then
C
                     NGRP(1) = iord('S')
                     NGRP(2) = num(2*norder,1)
                     NGRP(3) = num(2*norder,2)
                     call orcn(MAXAP3,A,B,D,D,ATMCHG,npop,nset,NATOMS,
     &                         IDUMP)
                  else
                     NGRP(1) = iord('D')
                     NGRP(2) = num(norder,1)
                     NGRP(3) = num(norder,2)
                     NGRP(4) = iord('D')
                     call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,
     &                         norder,IDUMP)
                  endif
               endif
            else
               call ilsw(1,26,1)
               write (Iout,99009)
            endif
         elseif ( itop.eq.3 ) then
C
C     *-----------------------*
C      spherical top molecules
C     *-----------------------*
C
C     only the cubic point groups: t, td, th, o, oh, i, and, ih are
C     possible.  no provision is made in the subsequent code for the
C     the possibility that a spherical top molecule may belong to any
C     other point group.
C
C     find the highest order proper rotation axis and align it with
C     the z-axis.
C
            if ( IPRINT.ne.0 ) write (Iout,99007)
            call sphere(MAXAP3,NATOMS,A,B,D,ATMCHG,nset,npop,norder,
     &                  IDUMP)
            if ( norder.ne.0 ) then
C
               ihop = norder - 2
               if ( ihop.eq.2 ) then
C
C     a spherical top molecule has a four-fold axis aligned with z and
C     is either o or oh.
C
C     test for a center of inversion.
C         if yes then oh.
C         else o.
C
                  call invert(MAXAP3,A,B,NATOMS,t)
                  call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                  NGRP(1) = iord('O')
                  if ( itst.ne.0 ) NGRP(2) = iord('H')
                  call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,2,
     &                      IDUMP)
               elseif ( ihop.eq.3 ) then
C
C     a spherical top molecule has a five-fold axis aligned with z and
C     is either i or ih.
C
C     test for a center of inversion.
C         if yes then ih.
C         else i.
C
                  call invert(MAXAP3,A,B,NATOMS,t)
                  call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                  NGRP(1) = iord('I')
                  if ( itst.ne.0 ) then
C
                     NGRP(2) = iord('H')
                     call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,2,
     &                         IDUMP)
                  else
                     call orcn(MAXAP3,A,B,D,D,ATMCHG,npop,nset,NATOMS,
     &                         IDUMP)
                  endif
               else
C
C     a spherical top molecule has a two-fold axis aligned with
C     z and is t, td, or th.
C
C     test for a center of inversion.
C         if yes then th.
C         else test for a vertical plane.
C             if yes then td.
C             else t.
C
                  call invert(MAXAP3,A,B,NATOMS,t)
                  call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                  if ( itst.eq.0 ) then
C
                     call findv(MAXAP3,A,B,D,NATOMS,npop,nset,ATMCHG,
     &                          itst)
                     NGRP(1) = iord('T')
                     if ( itst.ne.0 ) then
                        NGRP(2) = iord('D')
                        call rotate(MAXAP3,A,B,numatm,t,3,piovr4)
                        call move(MAXAP3,B,A,numatm)
                     endif
                  else
                     NGRP(1) = iord('T')
                     NGRP(2) = iord('H')
                  endif
                  call ordn(MAXAP3,A,B,D,ATMCHG,npop,nset,NATOMS,2,
     &                      IDUMP)
               endif
            else
               write (Iout,99008)
               call ilsw(1,26,1)
            endif
         else
C
C     *------------------------*
C      asymmetric top molecules
C     *------------------------*
C
C     these molecules can have no axes of order greater than 2.  thus
C     the possible point groups are:  d2h, d2, c2v, c2h, c2, ci, cs,
C     and c1.
C
C     align the principal axes with the cartesian axes.
C
            if ( IDUMP.ne.0 ) write (Iout,99005)
            call put(MAXAP3,A,B,t,praxes(1,3),numatm,3)
            call oraxis(MAXAP3,A,B,NATOMS,ATMCHG,3)
            call secmom(MAXAP3,NATOMS,A,ATMCHG,prmom,praxes)
            theta = halfpi
            if ( gabs(praxes(2,2)).gt.Tol2 )
     &           theta = -gatan(praxes(1,2)/praxes(2,2))
            call rotate(MAXAP3,A,B,numatm,t,3,theta)
            call move(MAXAP3,B,A,numatm)
            call oraxis(MAXAP3,A,B,NATOMS,ATMCHG,2)
            call orptst(MAXAP3,A,NATOMS,ixyz)
            if ( ixyz.ne.0 ) call orplan(MAXAP3,A,B,ATMCHG,numatm,prmom,
     &           praxes,ixyz)
C
C     test z and y for c2.
C         if both are c2 then test for an inversion center.
C              if yes then d2h.
C              if no  then d2.
C         if only z is c2 go to 200.
C         if only y is c2, rotate y to z and go to 200.
C         if neither is c2, test x for c2.
C              if yes then rotate x to z and go to 200.
C              in no  then continue at 150.
C
            call rotate(MAXAP3,A,B,NATOMS,t,3,pi)
            call equiv(MAXAP3,A,B,ATMCHG,NATOMS,iztst)
            call rotate(MAXAP3,A,B,NATOMS,t,2,pi)
            call equiv(MAXAP3,A,B,ATMCHG,NATOMS,iytst)
            itst = 2*iztst + iytst + 1
            if ( itst.eq.1 ) then
C
C     neither y nor z axes are c2.  check x.
C
               call rotate(MAXAP3,A,B,NATOMS,t,1,pi)
               call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
               if ( itst.eq.0 ) then
C
C     an asymmetric top molecule has no c2 axes.  the remaining
C     possibilities are cs, ci, and c1.  if cs, the symmetry plane
C     is made coincident with the xy plane.
C
                  call invert(MAXAP3,A,B,NATOMS,t)
                  call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                  if ( itst.eq.0 ) then
C
                     do 302 i = 1 , 3
                        v(i) = zero
 302                 continue
                     do 304 ixyz = 1 , 3
                        call reflct(MAXAP3,A,B,NATOMS,t,ixyz)
                        call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
                        if ( itst.ne.0 ) then
                           v(ixyz) = one
                           call put(MAXAP3,A,B,t,v,numatm,3)
                           call oraxis(MAXAP3,A,B,NATOMS,ATMCHG,3)
                           call orplan(MAXAP3,A,B,ATMCHG,numatm,prmom,
     &                                 praxes,3)
                           goto 310
                        endif
C
 304                 continue
C
                     NGRP(1) = iord('C')
                     NGRP(2) = iord('0')
                     NGRP(3) = iord('1')
                  else
                     NGRP(1) = iord('C')
                     NGRP(2) = iord('I')
                  endif
                  goto 400
               else
                  call rotate(MAXAP3,A,B,numatm,t,2,halfpi)
                  call oraxis(MAXAP3,B,A,NATOMS,ATMCHG,3)
                  call orplan(MAXAP3,B,A,ATMCHG,numatm,prmom,praxes,3)
                  call move(MAXAP3,B,A,numatm)
                  goto 320
               endif
C
 310           NGRP(1) = iord('C')
               NGRP(2) = iord('S')
               call orcn(MAXAP3,A,B,D,D,ATMCHG,npop,nset,NATOMS,IDUMP)
            elseif ( itst.eq.2 ) then
C
C     the y axis is c2 but the z axis is not.
C
               call rotate(MAXAP3,A,B,numatm,t,1,halfpi)
               call oraxis(MAXAP3,B,A,NATOMS,ATMCHG,3)
               call orplan(MAXAP3,B,A,ATMCHG,numatm,prmom,praxes,3)
               call move(MAXAP3,B,A,numatm)
               goto 320
            elseif ( itst.eq.3 ) then
               goto 320
            else
C
C     the molecule is either d2 or d2h.
C
               call invert(MAXAP3,A,B,NATOMS,t)
               call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
               NGRP(1) = iord('D')
               NGRP(2) = iord('0')
               NGRP(3) = iord('2')
               if ( itst.ne.0 ) then
                  NGRP(4) = iord('H')
                  call ord2h(MAXAP3,A,B,NATOMS,ATMCHG,IAN)
               endif
            endif
            goto 400
C
C     an asymmetric top molecule has but one c2 axis; the axis is
C     now coincident with the z axis.  the possible point groups are
C     c2h, c2v, and c2.
C
 320        call reflct(MAXAP3,A,B,NATOMS,t,3)
            call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
            if ( itst.eq.0 ) then
C
               call reflct(MAXAP3,A,B,NATOMS,t,2)
               call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
               if ( itst.eq.0 ) then
C
                  NGRP(1) = iord('C')
                  NGRP(2) = iord('0')
                  NGRP(3) = iord('2')
                  call orcn(MAXAP3,A,B,D,D,ATMCHG,npop,nset,NATOMS,
     &                      IDUMP)
               else
                  NGRP(1) = iord('C')
                  NGRP(2) = iord('0')
                  NGRP(3) = iord('2')
                  NGRP(4) = iord('V')
                  call orc2v(MAXAP3,A,B,NATOMS,ATMCHG)
               endif
            else
               NGRP(1) = iord('C')
               NGRP(2) = iord('0')
               NGRP(3) = iord('2')
               NGRP(4) = iord('H')
               call orcn(MAXAP3,A,B,D,D,ATMCHG,npop,nset,NATOMS,IDUMP)
            endif
         endif
      else
C
C     place the molecule on the z axis and distinguish between
C     d*h and c*v.
C
         if ( IDUMP.ne.0 ) write (Iout,99003)
         call put(MAXAP3,A,B,t,praxes(1,1),numatm,3)
         call oraxis(MAXAP3,A,B,NATOMS,ATMCHG,3)
         call reflct(MAXAP3,A,B,NATOMS,t,3)
         call equiv(MAXAP3,A,B,ATMCHG,NATOMS,itst)
         if ( itst.eq.0 ) then
C
            NGRP(1) = iord('C')
            NGRP(2) = iord('*')
            NGRP(3) = iord('V')
         else
            NGRP(1) = iord('D')
            NGRP(2) = iord('*')
            NGRP(3) = iord('H')
         endif
      endif
C
C     exit.
C     if requested, calculate ad print the moments of charge for the
C     reoriented molecule.
C
 400  call secmom(MAXAP3,NATOMS,A,ATMCHG,prmom,praxes)
      if ( IPRINT.ne.0 ) write (Iout,99002) (prmom(i),i=1,3) , 
     &                          ((praxes(j,i),i=1,3),j=1,3)
      return
C
      end
@* INDEX.
