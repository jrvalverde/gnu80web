@* repdnh.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] N                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    ICNT    ISAVE   NSAVE                                  
\item[Uses]  NSAVE                                                  
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GATAN   GCOS    LABREP  PUTTBL                         
\item[Called by]   INIREP                                                 
                                                                    
\end{description}
@a
      subroutine repdnh(N)
C ----------------------------------------------------------------------
      implicit none
      double precision f144 , f180 , f72 , four , gatan , gcos , one , 
     &                 pi , two
      integer Icnt , Isave , N , nd2h , nd3h , nd4h , nd5h , nd6h , 
     &        Nsave
      double precision d2htbl(4,8) , d3htbl(4,6)
      double precision d4htbl(4,10) , d6htbl(4,12)
      double precision d5htbl(4,8)
      common /reploc/ Nsave , Icnt , Isave(15)
      data nd2h/8/
C      data d2htbl/'ag',1.0,1.0,1.0,'au',1.0,1.0,-1.0,'b1g',1.0,-1.0,1.0,
C     +     'b1u',1.0,-1.0,-1.0,'b2g',-1.0,1.0,-1.0,'b2u',-1.0,1.0,1.0,
C     +     'b3g',-1.0,-1.0,-1.0,'b3u',-1.0,-1.0,1.0/
      data d2htbl/0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , -1.0 , 0.0 , 
     &     1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , -1.0 , 0.0 , -1.0 , 1.0 , 1.0 , 0.0 , -1.0 , -1.0 , 
     &     -1.0 , 0.0 , -1.0 , -1.0 , 1.0/
      data nd3h/6/
C      data d3htbl/'a1''',1.0,1.0,1.0,'a1"',1.0,1.0,-1.0,'a2''',1.0,-1.0,
C     +     1.0,'a2"',1.0,-1.0,-1.0,'e''',-1.0,0.0,2.0,'e"',-1.0,0.0,
C     +     -2.0/
      data d3htbl/0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , -1.0 , 0.0 , 
     &     1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 , -1.0 , 0.0 , -1.0 , 
     &     0.0 , 2.0 , 0.0 , -1.0 , 0.0 , -2.0/
      data nd4h/10/
C      data d4htbl/'a1g',1.0,1.0,1.0,'a1u',1.0,1.0,-1.0,'a2g',1.0,-1.0,
C     +     1.0,'a2u',1.0,-1.0,-1.0,'b1g',-1.0,1.0,1.0,'b1u',-1.0,1.0,
C     +     -1.0,'b2g',-1.0,-1.0,1.0,'b2u',-1.0,-1.0,-1.0,'eg',0.0,0.0,
C     +     -2.0,'eu',0.0,0.0,2.0/
      data d4htbl/0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , -1.0 , 0.0 , 
     &     1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , 1.0 , 0.0 , -1.0 , 1.0 , -1.0 , 0.0 , -1.0 , -1.0 , 
     &     1.0 , 0.0 , -1.0 , -1.0 , -1.0 , 0.0 , 0.0 , 0.0 , -2.0 , 
     &     0.0 , 0.0 , 0.0 , 2.0/
      data nd5h/8/
C      data d5htbl/'a1''',1.0,1.0,1.0,'a1"',1.0,1.0,-1.0,'a2''',1.0,-1.0,
C     +     1.0,'a2"',1.0,-1.0,-1.0,'e1''','??',0.0,2.0,'e1"','??',0.0,
C     +     -2.0,'e2''','??',0.0,2.0,'e2"','??',0.0,-2.0/
      data d5htbl/0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , -1.0 , 0.0 , 
     &     1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 , -1.0 , 0.0 , 0.0 , 
     &     0.0 , 2.0 , 0.0 , 0.0 , 0.0 , -2.0 , 0.0 , 0.0 , 0.0 , 2.0 , 
     &     0.0 , 0.0 , 0.0 , -2.0/
      data nd6h/12/
C      data d6htbl/'a1g',1.0,1.0,1.0,'a1u',1.0,1.0,-1.0,'a2g',1.0,-1.0,
C     +     1.0,'a2u',1.0,-1.0,-1.0,'b1g',-1.0,1.0,-1.0,'b1u',-1.0,1.0,
C     +     1.0,'b2g',-1.0,-1.0,-1.0,'b2u',-1.0,-1.0,1.0,'e1g',1.0,0.0,
C     +     -2.0,'e1u',1.0,0.0,2.0,'e2g',-1.0,0.0,2.0,'e2u',-1.0,0.0,
C     +     -2.0/
      data d6htbl/0.0 , 1.0 , 1.0 , 1.0 , 0.0 , 1.0 , 1.0 , -1.0 , 0.0 , 
     &     1.0 , -1.0 , 1.0 , 0.0 , 1.0 , -1.0 , -1.0 , 0.0 , -1.0 , 
     &     1.0 , -1.0 , 0.0 , -1.0 , 1.0 , 1.0 , 0.0 , -1.0 , -1.0 , 
     &     -1.0 , 0.0 , -1.0 , -1.0 , 1.0 , 0.0 , 1.0 , 0.0 , -2.0 , 
     &     0.0 , 1.0 , 0.0 , 2.0 , 0.0 , -1.0 , 0.0 , 2.0 , 0.0 , -1.0 , 
     &     0.0 , -2.0/
      data one/1.0D0/ , two/2.0D0/ , four/4.0D0/
      data f72/72.0D0/ , f144/144.0D0/ , f180/180.0D0/
C          this routine sets up what it can in /repcom/ for
C     dnh point groups.  these groups have 4n symmetry operations,
C     and these are generated by "oper" in the order:
C
C             e, (n-1)cn, n-c2, n-sigmav, sigmah, (n-1)sn
C
C     for these groups, we will save the first cn axis, one of
C     the c2 axes, and the sigmah plane.
C     r. a. whiteside - august 1979
C ----------------------------------------------------------------------
C
C                              the hollerith strings in the data
C                              statements below are not used by
C                              code, but are left in for their value
C                              as comments.
C
C                              character table for d2h.
C
C                              character table for d3h.
C
C                              character table for d4h.
C
C                              character table for d5h.
C                              some values filled by code below.
C
C                              character table for d6h.
C
C
C                              first, indicate in /reploc/ the
C                              sequence numbers of the operations
C                              to be saved.  do this even if we
C                              don't know the character table for
C                              the point group.
      Icnt = 0
      Nsave = 3
      Isave(1) = 1
      Isave(2) = N
      Isave(3) = 3*N
C
C                              now, see if we can fill /repcom/ with
C                              the character table for this point
C                              group.
      if ( N.eq.2 ) then
         call puttbl(Nsave+1,nd2h,d2htbl)
         call labrep('AG,AU,B1G,B1U,B2G,B2U,B3G,B3U,',8)
         return
C
      elseif ( N.eq.3 ) then
         call puttbl(Nsave+1,nd3h,d3htbl)
         call labrep('A1'',A1",A2'',A2",E'',E",',6)
         return
C
      elseif ( N.eq.4 ) then
         call puttbl(Nsave+1,nd4h,d4htbl)
         call labrep('A1G,A1U,A2G,A2U,B1G,B1U,B2G,B2U,EG,EU,',10)
         return
C
      elseif ( N.eq.5 ) then
         pi = four*gatan(one)
         d5htbl(2,5) = two*gcos(f72*pi/f180)
         d5htbl(2,6) = two*gcos(f72*pi/f180)
         d5htbl(2,7) = two*gcos(f144*pi/f180)
         d5htbl(2,8) = two*gcos(f144*pi/f180)
         call puttbl(Nsave+1,nd5h,d5htbl)
         call labrep('A1'',A1",A2'',A2",E1'',E1",E2'',E2",',8)
         return
C
      elseif ( N.eq.6 ) then
         call puttbl(Nsave+1,nd6h,d6htbl)
         call labrep('A1G,A1U,A2G,A2U,B1G,B1U,B2G,B2U,E1G,E1U,E2G,E2U,',
     &               12)
         return
      endif
C
      call puttbl(Nsave+1,0,0)
      return
C
      end
@* INDEX.
