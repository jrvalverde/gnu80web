@* exp78.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] NO                                                        
\item[INPUT:] NV                                                        
\item[PASSED:] IBUC1                                                     
\item[PASSED:] IBUC2                                                     
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    V                                                      
\item[Uses]  MDV     V                                              
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       FILEIO  LSEXS   TRACK                                  
\item[Called by]   DD2     DD3     DOUBAR  EXCHN4                         
                                                                    
\end{description}
@a
      subroutine exp78(NO,NV,IBUC1,IBUC2)
      implicit none
      double precision F42 , Four , Half , One , Onept5 , Ten , Three , 
     &                 Two , V , Zero
      integer i , IBUC1 , IBUC2 , icore , ii , ij , imj , In , ind1 , 
     &        ind2 , indi , indj , indrd , Iout , Ipunch , isave , j , 
     &        kount , ktimes , leng
      integer Mdv , NO , NV , nv2 , nv3
      common /v     / V(20000) , Mdv
      common /const / Zero , Half , One , Onept5 , Two , Three , Four , 
     &                Ten , F42
      common /io    / In , Iout , Ipunch
C
C     ******************************************************************
C1exp78
C
C     expands matrix with i.le.j,a.le.b to all i,j,a,b
C     no is the dimension of i or j, ntimes the dimension of a or b.
C
C     feb/79 krishnan
C
C     ******************************************************************
C
C
      call track('EXP78 ')
C
      if ( NO.gt.0 .and. NV.gt.0 ) then
         call fileio(1,-IBUC2,0,0,0)
         nv2 = NV*NV
         nv3 = NV*(NV+1)/2
         icore = 0
         kount = 0
C
         do 50 ii = 1 , NO
            indi = (ii-1)*(2*NO-ii+2)/2
C
            do 20 ij = 1 , NO
               indj = (ij-1)*(2*NO-ij+2)/2
               isave = icore
               icore = icore + nv2
               if ( icore.gt.Mdv ) then
C
                  leng = isave
                  call fileio(1,IBUC2,leng,V,0)
                  icore = nv2
                  isave = 0
               endif
C
               imj = ii - ij
               if ( imj.gt.0 ) then
C
                  indrd = (indj+ii-ij)*nv3
                  leng = nv3
                  call fileio(2,-IBUC1,leng,V(isave+1),indrd)
                  call lsexs(V(isave+1),NV)
C
C     check to see if the input is contiguous.
               elseif ( ij.lt.NO .and. (icore+nv2).le.Mdv ) then
C
                  kount = kount + 1
               else
                  ktimes = kount*nv3
                  indrd = (indi+ij-ii)*nv3 - ktimes
                  leng = nv3 + ktimes
                  call fileio(2,-IBUC1,leng,V(isave-ktimes+1),indrd)
C
C     relocate in core and expand a.le.b to all ab
                  ind1 = isave - kount*nv2
                  ind2 = isave - kount*nv3
                  if ( kount.gt.0 ) then
                     do 4 i = 1 , kount
                        if ( nv3.gt.0 ) then
                           do 2 j = 1 , nv3
                              V(ind1+j) = V(ind2+j)
 2                         continue
                        endif
                        call lsexs(V(ind1+1),NV)
                        ind1 = ind1 + nv2
                        ind2 = ind2 + nv3
 4                   continue
                  endif
                  call lsexs(V(ind1+1),NV)
                  kount = 0
               endif
C
 20         continue
 50      continue
C
         leng = icore
         call fileio(1,IBUC2,leng,V,0)
      endif
C
      return
C
      end
@* INDEX.
