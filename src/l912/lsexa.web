@* lsexa.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[OUTPUT:] V                                                         
\item[INPUT:] IDIM                                                      
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]   NOTHING                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       TRACK                                                  
\item[Called by]   DD1SD4  EXPABA  EXPAND                                 
                                                                    
\end{description}
@a
      subroutine lsexa(V,IDIM)
      implicit none
      integer i , i1 , i2 , i3 , i4 , IDIM , ij , j , jr , mm , n1
      double precision V , zero
      dimension V(*)
      data zero/0.D0/
C
C     ******************************************************************
C1lsexa
C     subroutine lsexa(v,idim)
C     expand an antisymmetric matrix given as a linear array in
C     compressed form to its full length (including zeros in diagonal)
C
C     march 76/seeger
C
C     ******************************************************************
C
C
C
      call track('LSEXA ')
C
      n1 = IDIM - 1
      if ( n1.lt.0 ) goto 300
      if ( n1.ne.0 ) then
C
         mm = IDIM*(IDIM-1)
         i2 = mm - IDIM
         mm = mm/2
         do 50 i = 2 , IDIM
            i1 = i - 1
            do 20 j = 1 , i1
               jr = IDIM - j + 1
               ij = i2 + jr
               V(ij) = V(mm)
               mm = mm - 1
 20         continue
            i2 = i2 - IDIM
 50      continue
         i3 = 0
         do 100 i = 1 , n1
            i1 = i + 1
            i4 = i3 + i + IDIM
            do 60 j = i1 , IDIM
               ij = i3 + j
               V(i4) = -V(i3+j)
               i4 = i4 + IDIM
 60         continue
            i3 = i3 + IDIM
 100     continue
      endif
      i2 = 0
      do 200 i = 1 , IDIM
         V(i2+i) = zero
         i2 = i2 + IDIM
 200  continue
C
 300  return
C
      end
@* INDEX.
