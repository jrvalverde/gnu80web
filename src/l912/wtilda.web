@* wtilda.
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    DBASE   IBASE   IFIL    IIA     INTC    INTT    JA     
             NTX     SINDX   V1      X                              
\item[Transmits as argument]  CMO     IAO                                            
\item[Uses]  CMO     CUT     DBASD   I       IAO     IBASD   IBASE  
             ICON    IFIL    INTC    INTT    IRESET  IUX     J      
             K       KNTT1   KNTT2   L       LPAIR   LS      MINDX  
             MODE    NR      NTX     NWPI    P       Q       R      
             SINDX   V       V1      X                              
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       IREAD   IWAIT   IWIND   LABSCF  LNK1E   TRACK   UNPCK4 
\item[Called by]   DD1SD4                                                 
                                                                    
\end{description}
@a
      subroutine wtilda
      implicit none
      double precision a0 , a1 , Cmo , Cut , E , V , V1 , Valint , X
      integer I , Iao , Ibasd , Ibase , Ibfpad , Icon , Icount , Ifil , 
     &        iflst , Iia , ij , In , intape , Intc , Intcnt , Intt , 
     &        Iout , Ipunch , Iq , iqbufr
      integer iqproc , Ireset , Ismode , Istat , Itotal , Iux , J , Ja , 
     &        jji , jjk , jjl , jki , jli , jlj , jq , K , Kntt1 , 
     &        Kntt2 , L , Last
      integer Limint , Lpair , lq , Ls , m , Mdv , Mindx , Mode , 
     &        nfile , Nr , Nrpext , Ntx , Nwiib , Nwpi
      integer P , Q , R , Sindx
      integer Dbase , Dbasd , Dcount
      dimension Iao(25250)
      dimension Iia(2)
      common /v     / V(10000) , V1(10000) , Mdv
      common /moc   / Cmo(12625) , E(175)
      common /ibf   / Ismode , Mode , Istat , Last , Ntx , Iux(5) , 
     &                Icon , Nrpext , Kntt1 , Kntt2 , Ibase , Ibasd(2) , 
     &                Dbase , Dbasd(2) , Ireset(2) , Iq , Ifil , 
     &                Intcnt , Itotal , Limint , Nwpi , Nwiib , Ibfpad
      common /packed/ I , J , K , L , Valint , Ja
      common /wtild / Cut , Ls(81) , Lpair , Nr , Intt , Intc
      common /io    / In , Iout , Ipunch
      equivalence (Iao(1),Cmo(1))
      equivalence (P,I) , (Q,J) , (R,K) , (Sindx,L) , (Mindx,K)
      equivalence (Valint,Iia(1)) , (Valint,X)
      equivalence (Icount,Kntt1) , (Dcount,Kntt2)
      data nfile/0/
C
C
C     ******************************************************************
C1wtilda
C
C     evaluates wtilda(ijsu) = sum (st/uv) * atilda(ijtv)
C                              t,v
C     for  i,j being both of the same spin space
C     i and j are mo's, s,t,u,v are ao's
C     accepts the twoelectron integrals (st/uv) from tape,
C     atilda for all t,v, and as many i,j pairs as possible in v
C     the output vector is in v1
C
C     august 76/seeger
C
C     ******************************************************************
C
C
C
C     note that the two-electron integrals are read into cmo
C     in the following common.  if dimensions are changed,
C     care should be exercised.
C
C
C
C
      call track('WTILDA')
C
C     initiate input of a.o.integrals
C     start integrals from iux(2) on disc-oriented
C     systems.
C
      Ntx = 1
      intape = Iux(2)
      iqbufr = 1
      iqproc = 2
      call iwind(intape)
      call iread(intape,iqbufr,Cmo)
      Ifil = 1
 100  call iwait(intape)
C
      iqbufr = iabs(iqbufr-2) + 1
      iqproc = iabs(iqproc-2) + 1
      Ibase = Ibasd(iqproc)
      Dbase = Dbasd(iqproc)
      call labscf(Iao(Ibase),iflst)
      if ( iflst.eq.0 ) then
         if ( Ifil.eq.(nfile+Ntx*Icon) ) then
            call iwind(intape)
C
            Ntx = Ntx + 1
            intape = Iux(Ntx+1)
            call iwind(intape)
         endif
         call iread(intape,iqbufr,Cmo)
C
         Ifil = Ifil + 1
      endif
C
      if ( Mode.ne.1 ) call lnk1e
C
      if ( Kntt1.gt.0 ) then
         jq = Ireset(1) + Ibase
         lq = jq + (Kntt1-1)*Nwpi
C
         do 150 m = jq , lq , Nwpi
            Ja = Iao(m)
            Iia(1) = Iao(m+1)
            Iia(2) = Iao(m+2)
            if ( dabs(X).ge.Cut ) then
               Intc = Intc + 1
               call unpck4
               jki = Ls(K) + I
               jli = Ls(L) + I
               if ( J.ge.L ) then
C
                  jjl = Ls(L) + J
                  a0 = -X
               else
                  jjl = Ls(J) + L
                  a0 = X
               endif
               if ( J.gt.K ) then
C
                  jjk = Ls(K) + J
                  a1 = -X
               else
                  jjk = Ls(J) + K
                  a1 = X
               endif
               do 110 ij = 1 , Nr
                  V1(jki) = V1(jki) - a0*V(jjl)
                  V1(jli) = V1(jli) - a1*V(jjk)
                  V1(jjk) = V1(jjk) - a1*V(jli)
                  V1(jjl) = V1(jjl) - a0*V(jki)
                  jki = jki + Lpair
                  jli = jli + Lpair
                  jjl = jjl + Lpair
                  jjk = jjk + Lpair
 110           continue
            endif
 150     continue
C
         Intt = Intt + Kntt1
      endif
C
      if ( Kntt2.gt.0 ) then
         lq = Ireset(2) + Ibase
         jq = lq - (Kntt2-1)*Nwpi
C
         do 200 m = jq , lq , Nwpi
            Ja = Iao(m)
            Iia(1) = Iao(m+1)
            Iia(2) = Iao(m+2)
            if ( dabs(X).ge.Cut ) then
               Intc = Intc + 1
               call unpck4
               Sindx = Sindx + 1
C
               if ( Sindx.eq.1 ) goto 180
               if ( Sindx.eq.2 ) then
C
C     ijjl   (pqqr)
                  jji = Ls(Q) + P
                  jlj = Ls(R) + Q
                  do 155 ij = 1 , Nr
                     V1(jji) = V1(jji) + X*V(jlj)
                     V1(jlj) = V1(jlj) + X*V(jji)
                     jji = jji + Lpair
                     jlj = jlj + Lpair
 155              continue
               elseif ( Sindx.eq.3 ) then
C
C     ijkj   (pqrq)
                  jji = Ls(Q) + P
                  jjk = Ls(Q) + R
                  do 160 ij = 1 , Nr
                     V1(jji) = V1(jji) - X*V(jjk)
                     V1(jjk) = V1(jjk) - X*V(jji)
                     jji = jji + Lpair
                     jjk = jjk + Lpair
 160              continue
               elseif ( Sindx.eq.4 ) then
C
C     ijij   (pqpq)
                  jji = Ls(Q) + P
                  do 165 ij = 1 , Nr
                     V1(jji) = V1(jji) - X*V(jji)
                     jji = jji + Lpair
 165              continue
               elseif ( Sindx.eq.5 ) then
C
C     iikl   (ppqr)
                  jki = Ls(Q) + P
                  jli = Ls(R) + P
                  do 170 ij = 1 , Nr
                     V1(jki) = V1(jki) + X*V(jli)
                     V1(jli) = V1(jli) + X*V(jki)
                     jki = jki + Lpair
                     jli = jli + Lpair
 170              continue
               elseif ( Sindx.eq.6 ) then
C
C     ijkk   (pqrr)
                  jki = Ls(R) + P
                  if ( Q.gt.R ) then
C
                     jjk = Ls(R) + Q
                     X = -X
                  else
                     jjk = Ls(Q) + R
                  endif
                  do 175 ij = 1 , Nr
                     V1(jki) = V1(jki) - X*V(jjk)
                     V1(jjk) = V1(jjk) - X*V(jki)
                     jki = jki + Lpair
                     jjk = jjk + Lpair
 175              continue
               elseif ( Sindx.ne.8 ) then
C
                  if ( Mindx.eq.1 .or. Mindx.eq.3 ) then
                  elseif ( Mindx.eq.2 ) then
C
C     iikk   (ppqq)
                     jki = Ls(Q) + P
                     do 176 ij = 1 , Nr
                        V1(jki) = V1(jki) + X*V(jki)
                        jki = jki + Lpair
 176                 continue
                  else
                     goto 180
                  endif
               endif
               goto 200
C
C     ijil   (pqpr)
 180           jli = Ls(R) + P
               jji = Ls(Q) + P
               do 190 ij = 1 , Nr
                  V1(jji) = V1(jji) - X*V(jli)
                  V1(jli) = V1(jli) - X*V(jji)
                  jji = jji + Lpair
                  jli = jli + Lpair
 190           continue
            endif
C
 200     continue
         Intt = Intt + Kntt2
      endif
      if ( iflst.le.0 ) goto 100
      call iwind(intape)
C
      return
C
      end
@* INDEX.
