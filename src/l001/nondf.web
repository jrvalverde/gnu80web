@* nondf.
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    JOP                                                    
\item[Transmits as argument]  IOUT    OPTION                                         
\item[Uses]  IN      IOUT    LNK     NLINK   OPTION                 
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       LNK1E   QPARSE  QPERRO  QPINIT  RDROUT                 
\item[Called by]   EROUTE                                                 
                                                                    
\end{description}
@a
      subroutine nondf
C***********************************************************************
      implicit none
      integer crd , dash , i , icard , imax , In , ioccur , Iout , 
     &        Ipunch , Jop , k , len , Ll , Lnk , ncard , Nchain , 
     &        ndsh , Nlink , Option , Pad
      integer qparse , res5 , result
      dimension icard(80) , ncard(100) , result(5)
      common /io    / In , Iout , Ipunch
      common /option/ Option(92)
      common /tmprte/ Nchain , Ll , Nlink , Pad , Lnk(200) , Jop(50,50)
      data dash/'-'/
C     subroutine to get non default options
C     from a seperate card deck (terminated by a blank card)
C     the following format should be used:
C     ic(n)/iop1=val,iop2=val,iop3=val;ic2(n2)/iop4=val;
C     - ic(n) is the n-th occurence of overlay ic in the route
C     (n) can be ommitted, in which n defaults to 1
C     '/' = seperator, can be any of: ':' ',' '/' <space>
C     iop1 is the option wich is to be set to val
C     different sets of options are seperated by a ';'
C     note that options can be set to a new value for existing overlays
C     only, you cannot specify new overlays or links
C     example:
C    \#p sto-3g/opt nondef
C
C   1(3)/34=5
C     this will set option 34 to 5 in the third occurence of
C     overlay 1.
C
99001 format (2x,19A4)
99002 format (2x,128A1)
C
C     read in the non default options
      read (In,99003) (icard(i),i=1,80)
C
99003 format (80A1)
C
      len = 100
      call rdrout(icard,ncard,len)
      if ( len.gt.400 ) then
         write (Iout,99004)
         call lnk1e
C
99004    format (' TO MANY NON DEFAULT OPTIONS')
      endif
C     init parse table
      call qpinit(Option,0,1,0)
C                       print out the route card.
      ndsh = min0(len,76)
      write (Iout,99002) (dash,i=1,ndsh)
      imax = len/4 + 1
      write (Iout,99001) (ncard(i),i=1,imax)
      write (Iout,99002) (dash,i=1,ndsh)
C parse the table
C     result i:
C     1=overlay nr
C     2=n
C     3=option number
C     4=value
C     5= flag: 0=> set this option for this overlay
C     "   "    1=> set this option for all occurances of this overlay
C     "   "    2=> new overlay number parsed.
      result(1) = 0
      result(3) = 0
      result(2) = 1
      result(4) = 0
      result(5) = 0
 100  i = qparse(result,Option,ncard,len)
      if ( i.ne.0 ) then
         if ( i.ne.1 ) then
C     error in parser:
            write (Iout,99005)
C
99005       format (' ERROR PARSING NON DEFAULT OPTIONS')
C
            call qperro(ncard,len,Iout)
            call lnk1e
         else
            res5 = result(5)
            if ( res5.le.1 ) then
C     if res5=0 then get nth occurence of overlay result(1)
C     else if res5=1 get all occurences of overlay result(1)
               ioccur = 0
               i = 0
               k = 0
C     skip to last link in this overlay:
 110           if ( mod(Lnk(i+1),10000)/100.ne.result(1) ) then
C
                  if ( i.ne.k ) then
C     last link in overlay found:
                     ioccur = ioccur + 1
                     if ( res5.ne.0 .or. ioccur.eq.result(2) ) then
C     get card number for this overlay
                        crd = mod(Lnk(i),1000000)/10000
                        Jop(result(3),crd) = result(4)
                        if ( res5.eq.0 ) goto 100
                     endif
                  endif
                  i = i + 1
                  k = i
                  if ( k.le.Nlink ) goto 110
                  if ( res5.ne.0 ) goto 100
               else
                  i = i + 1
                  goto 110
               endif
            else
C     get a new overlay number, reset n to default
               result(5) = 0
               result(2) = 1
               goto 100
            endif
         endif
C     card number doesn't exist
         write (Iout,99006) result(1) , result(2)
C
99006    format (' LINK NUMBER ',i10,'(',i2,') UNDEFINED')
C
         call lnk1e
      endif
      return
C
      end
@* INDEX.
