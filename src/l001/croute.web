@* croute.
 \section*{\sf Common Variables}  
\begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Transmits as argument]  FIRST   IOUT    IRTCRD                                 
\item[Uses]  FIRST   IOUT    IRTCRD                                 
                                                                    
\end{description}  
\section*{\sf External Subprograms}  
\begin{description}
                                                                    
\item[Calls]       FILLRT  LNK1E   PAKSTR  QPARSE  QPERRO  QPINIT         
\item[Called by]   LINK1                                                  
                                                                    
\end{description}
@a
      subroutine croute
      implicit none
      integer Dirtab , First , i , In , Iout , Ipunch , Irtcrd , 
     &        Ititle , Jmptab , Labl , len , Optab , Ovtab , qparse , 
     &        result , Segtab
      dimension result(3)

      common /label / Labl(1000) , Ititle(100) , Irtcrd(100)
      common /io    / In , Iout , Ipunch
      common /crtab / First(32) , Dirtab(28) , Ovtab(13) , Optab(35) , 
     &                Segtab(29) , Jmptab(21)
C
      call fillrt(0,0,0)
C
C                  initialize the parser.
      call qpinit(First,0,1,0)
C
C                  pack route down and get length.
      len = 0
      call pakstr(Irtcrd,400,Irtcrd,len)
C
C                  top of parse loop.  the parser will return each
C                  time there's something to do, and all we need to
C                  do is call fillrt each time.
      result(1) = 0
      result(2) = 0
      result(3) = 0
 100  i = qparse(result,First,Irtcrd,len)
C
C                  return status of 0 indicates we're through.
      if ( i.ne.0 ) then
         if ( i.ne.1 ) then
C
C                  error in parser.
            write (Iout,99001)
C
99001       format ('  ERROR PARSING NON-STANDARD ROUTE.')
C
            call qperro(Irtcrd,len,Iout)
            call lnk1e
         else
            call fillrt(result(1),result(2),result(3))
            result(1) = 0
            result(2) = 0
            result(3) = 0
            goto 100
         endif
      endif
C
C                  parse is done.
      call fillrt(6,0,0)
      return
C
      end
@* INDEX.
