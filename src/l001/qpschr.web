@* qpschr.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[PASSED:] TABLE                                                     
\item[PASSED:] LINE                                                      
\item[INPUT:] LENGTH                                                    
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    LCURSR  LENSTR  STRING                                 
\item[Transmits as argument]  TCURSR                                                 
\item[Uses]  LASTYP  LCURSR  QPCAPS  QPFAIL  QPOK    TCURSR         
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GETCHR  PUTICR  QPCPV   QPTVAL  STREQ   STREQC         
\item[Called by]   QPMATC                                                 
                                                                    
\end{description}
@a
      integer function qpschr(TABLE,LINE,LENGTH)
C ----------------------------------------------------------------------
      implicit none
      integer Chrctr , Digit , getchr , i , Inte , j , jjjj , Lastyp , 
     &        Lcursr , len , LENGTH , Lenstr , Maxdep , Maxlen , 
     &        mycrsr , nwrds , Qpabrv , Qpambg , Qpblnk , Qpcaps
      integer qpcpv , Qpdpth , Qpend , Qperr , Qpexit , Qpfail , 
     &        Qpnoab , Qpok , Qprecr , Qpret , qptval , Stack , State , 
     &        Status , String , t , Tcursr , Tran , val
      integer LINE(*) , TABLE(*)
      integer tword(16) , lword(16)
      logical ifeq , streq , streqc
      real Fp
      double precision Dp
      common /qpstat/ Lastyp , Status , Chrctr , Digit , Inte , Fp , 
     &                Dp , Tcursr , Lcursr , State , Tran , Lenstr , 
     &                String(64) , Qpblnk , Qpnoab , Qpcaps
      common /qpretc/ Qpok , Qpret , Qpfail , Qpambg , Qperr , Qpexit , 
     &                Qpabrv , Qpend , Qprecr , Qpdpth , Maxdep , 
     &                Stack(6,10) , Maxlen
C ======================================================================
C            this routine looks to see if the next character(s) in line
C     match the character(s) requested (in table).  if a match is
C     found, then both lcursr and tcursr are advanced past the thing
C     accepted (tcursr to the destination field), and the returned
C     value of the function is qpok.  if the comparison fails, then
C     qpfail is returned as the function value, and tcursr is
C     advanced past the alphabet token in the table.  thus, in every
C     case tcursr is advanced to the destination field.
C     r. a. whiteside - april 1979
C2qpschr
C ----------------------------------------------------------------------
C
C
C
      val = Qpfail
      len = -Lastyp
C            get the characters from the table (advancing tcursr).
      nwrds = (len-1)/qpcpv(jjjj) + 1
      do 100 i = 1 , nwrds
         tword(i) = qptval(TABLE,Tcursr)
 100  continue
C            get the characters from the input line.  use a temporary
C            cursor in case of failure.
      mycrsr = Lcursr
      j = 0
      do 200 i = 1 , len
         if ( mycrsr.ge.LENGTH ) goto 300
         t = getchr(LINE,mycrsr)
         call puticr(t,lword,j)
 200  continue
      if ( Qpcaps.eq.0 ) ifeq = streqc(tword,lword,len)
      if ( Qpcaps.ne.0 ) ifeq = streq(tword,lword,len)
      if ( ifeq ) then
C            got a match, so advance lcursr and store the string into
C            "string".
         Lcursr = mycrsr
         Lenstr = len
         do 250 i = 1 , nwrds
            String(i) = tword(i)
 250     continue
         val = Qpok
      endif
 300  qpschr = val
      return
C
      end
@* INDEX.
