@* getrep.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] TABLE                                                     
\item[OUTPUT:] ORBSYM                                                    
\item[INPUT:] NB                                                        
\item[INPUT:] MODE                                                      
\item[OUTPUT:] NOSYM                                                     
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    CHRTBL  NREPS                                          
\item[Transmits as argument]  LBLREP                                                 
\item[Uses]  CHRTBL  LBLREP  NREPS   NSYMOP                         
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GABS    GETB    PUTB    PUTDEL  SKIP                   
\item[Called by]   SYMASG  VIBSYM                                         
                                                                    
\end{description}
@a
C this is where symasg goes
C this is where bldtbl goes
      subroutine getrep(TABLE,ORBSYM,NB,MODE,NOSYM)
C ----------------------------------------------------------------------
      implicit none
      double precision gabs , one , TABLE , thrsh , tmp
      integer i , iop , irep , isave , k , lblunk , lcur , len , lim , 
     &        lstunk , maxrep , mcur , MODE , NB , NOSYM , nunk
      double precision Symops , Chrtbl
      integer ocur
      integer Nsymop , Nreps , Lblrep , Iprmut
      dimension TABLE(NB,*)
      integer ORBSYM(NB)
      dimension lblunk(15) , tmp(8)
      common /repcom/ Nsymop , Nreps , Lblrep(32) , Chrtbl(10,16) , 
     &                Symops(9,10) , Iprmut(100,10)
      data one/1.0D0/ , thrsh/1.0D-4/
      data maxrep/15/
      data lstunk/'??'/
      data lblunk/'?A' , '?B' , '?C' , '?D' , '?E' , '?F' , '?G' , 
     &     '?H' , '?I' , '?J' , '?K' , '?L' , '?M' , '?N' , '?O'/
C          this routine fills "orbsym" with the orbital symmetry
C     assignments.  input consists of "table" which is an (nb x nsymop)
C     array which describes how each orbital behaves under each
C     symmetry operation.  it also uses the character table stored in
C     /repdat/.  if the character table is not there, this routine
C     tries to build one as it goes.  if an orbital cannot be assigned
C     a symmetry in the provided character table, then "nosym" is set
C     to 1.  "mode" indicates whether characters or integers are desired
C     as the symmetry assignment:  0 ---> characters; 1 ---> integers.
C     r. a. whiteside - august 1979
C ----------------------------------------------------------------------
C
C     data irwrep/562/,lrwrep/767/
C
C
      nunk = 0
      ocur = 0
      mcur = 0
      if ( Nreps.gt.0 ) then
C
C                  position mcur to end of label list.
         do 50 i = 1 , Nreps
            call skip(2,Lblrep,mcur)
 50      continue
      else
         NOSYM = 1
         nunk = 1
         Nreps = 1
         call putb(lblunk(1),2,Lblrep,mcur)
         call putdel(2,Lblrep,mcur)
         do 100 i = 1 , Nsymop
            Chrtbl(i,1) = one
 100     continue
      endif
C
C                        main loop over orbitals.
      do 300 i = 1 , NB
C                  loop over known orbital symmetry types.
         do 150 irep = 1 , Nreps
C
C                  check to see if orbital matches this type.
            do 120 iop = 1 , Nsymop
C       write(6,2222) table(i,iop), chrtbl(iop,irep)
C 2222 format(' debug ',2f12.5)
               if ( gabs(TABLE(i,iop)-Chrtbl(iop,irep)).gt.thrsh )
     &              goto 150
 120        continue
C                  matches ... store label into orbsym.
            isave = irep
            goto 200
C
 150     continue
C                  no match in list.  put this orbital type into
C                  the character table, if there is room.
         NOSYM = 1
         if ( Nreps.ge.maxrep ) then
C
            call putb(lstunk,2,ORBSYM,ocur)
            call putdel(2,ORBSYM,ocur)
         else
            nunk = nunk + 1
            call putb(lblunk(nunk),2,ORBSYM,ocur)
            call putdel(2,ORBSYM,ocur)
            Nreps = Nreps + 1
            do 160 iop = 1 , Nsymop
               Chrtbl(iop,Nreps) = TABLE(i,iop)
 160        continue
            call putb(lblunk(nunk),2,Lblrep,mcur)
            call putdel(2,Lblrep,mcur)
         endif
         goto 300
C
 200     if ( MODE.eq.1 ) ORBSYM(i) = isave
         if ( MODE.ne.1 ) then
C
C                  put the label into orbsym
            lcur = 0
            if ( isave.ne.1 ) then
               lim = isave - 1
               do 210 k = 1 , lim
                  call skip(2,Lblrep,lcur)
 210           continue
            endif
            call getb(2,tmp,len,Lblrep,lcur)
            call putb(tmp,len,ORBSYM,ocur)
            call putdel(2,ORBSYM,ocur)
         endif
 300  continue
      return
C
      end
@* INDEX.
