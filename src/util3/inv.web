@* inv.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[OUTPUT:] A                                                         
\item[INPUT:] N                                                         
\item[OUTPUT:] IS                                                        
\item[OUTPUT:] IAD1                                                      
\item[OUTPUT:] IAD2                                                      
\item[OUTPUT:] D                                                         
\item[INPUT:] MDM                                                       
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]  IOUT                                                   
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       GABS    GMAX1   LNK1E                                  
\item[Called by]   ANALFC  LOCMIN  MSOPT   MSPRNT                         
                                                                    
\end{description}
@a
      subroutine inv(A,N,IS,IAD1,IAD2,D,MDM)
      implicit none
      double precision A , b , D , e , gabs , gmax1 , one , small , zero
      integer i , IAD1 , IAD2 , ima , In , Iout , Ipunch , IS , j , k , 
     &        l , m , MDM , N
      dimension A(MDM,MDM) , IS(2,MDM) , IAD1(MDM) , IAD2(MDM) , D(MDM)
      common /io    / In , Iout , Ipunch
      data zero/0.0D0/ , one/1.0D0/ , small/1.0D-20/
C     ******************************************************************
C     inversion of square matrix a by means of the gauss-jordan
C     algorithm
C
C     april 72/rs9b
C     ******************************************************************
C
C
C
99001 format (' WARNING FROM INV: MATRIX IS SINGULAR')
C     ******************************************************************
      do 100 l = 1 , N
         IS(1,l) = 0
         IS(2,l) = 0
 100  continue
      do 400 ima = 1 , N
         b = zero
         do 150 l = 1 , N
            do 120 m = 1 , N
               if ( IS(1,l).ne.1 .and. IS(2,m).ne.1 ) then
                  e = gabs(A(l,m))
                  if ( e.ge.b ) then
                     i = l
                     k = m
                  endif
                  b = gmax1(b,e)
               endif
 120        continue
 150     continue
         IS(1,i) = 1
         IS(2,k) = 1
         IAD1(k) = i
         IAD2(i) = k
         b = A(i,k)
C.....pivot
         if ( gabs(b).lt.small ) goto 900
         A(i,k) = one/b
         do 200 l = 1 , N
C.....kellerzeile
            if ( l.ne.k ) A(i,l) = -A(i,l)/b
 200     continue
         do 250 l = 1 , N
            do 220 m = 1 , N
C.....rechteck-regel
               if ( l.ne.i .and. m.ne.k ) A(l,m) = A(l,m) + A(l,k)
     &              *A(i,m)
 220        continue
 250     continue
         do 300 l = 1 , N
C.....pivot-spalte
            if ( l.ne.i ) A(l,k) = A(l,k)/b
 300     continue
 400  continue
C.....permutation der zeilen, um die natuerliche ordnung wieder herzuste
      do 600 l = 1 , N
         do 450 j = 1 , N
            k = IAD1(j)
            D(j) = A(k,l)
 450     continue
         do 500 j = 1 , N
            A(j,l) = D(j)
 500     continue
 600  continue
C.....permutation der spalten
      do 800 l = 1 , N
         do 650 j = 1 , N
            k = IAD2(j)
            D(j) = A(l,k)
 650     continue
         do 700 j = 1 , N
            A(l,j) = D(j)
 700     continue
 800  continue
      return
C
C     error exit: matrix is singular
 900  write (Iout,99001)
      call lnk1e
      return
C
      end
@* INDEX.
