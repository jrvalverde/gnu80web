@* nprio.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] I                                                         
\item[INPUT:] J                                                         
\item[INPUT:] K                                                         
\item[INPUT:] L                                                         
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]   NOTHING                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]        NOTHING                                           
\item[Called by]   DPHNIX  ISYMGO  TWLDRV                                 
                                                                    
\end{description}
@a
      integer function nprio(I,J,K,L)
      implicit none
      integer I , J , K , L , lend , loop1 , loop2 , num , num2
      dimension num(4)
C
C     calculate a "priority", a number which is unique for any given
C     i j k l.  ijkpri is used by various routines in the process
C     of deciding which of several symmetrically related possibilites
C     to choose.
C     currently nprio is unique for max(i,j,k,l) <= 120.
C
C
C                                sort i, j, k, l into the order
C                                i>= j >= k >= l
      num(1) = I
      num(2) = J
      num(3) = K
      num(4) = L
      lend = 4
      do 100 loop1 = 1 , 3
         lend = lend - 1
         do 50 loop2 = 1 , lend
            if ( num(loop2).gt.num(loop2+1) ) then
C exchange them:
               num2 = num(loop2)
               num(loop2) = num(loop2+1)
               num(loop2+1) = num2
            endif
 50      continue
 100  continue
      nprio = num(1)*1728000 + num(2)*14400 + num(3)*120 + num(4)
C
      return
C
      end
@* INDEX.
