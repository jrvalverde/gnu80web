@* herm.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] NBASIS                                                    
\item[OUTPUT:] A                                                         
\item[INPUT:] KK                                                        
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]     NOTHING                                           
\item[Uses]  CMP     MDIM    MDSQ                                   
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]        NOTHING                                           
\item[Called by]   MATMUL                                                 
                                                                    
\end{description}
@a
      subroutine herm(NBASIS,A,KK)
      implicit none
      double precision A , a0
      integer i , i0 , i1 , i1i , i1r , i2 , ii , j , KK , Ksm , Kspin , 
     &        Ksw , Mdim , Mdsq , Mshifs , Mtt , NBASIS , Nesk , Nest , 
     &        Nest1
      integer Nse , Nsep , Ntt
      logical Cmp , Rhf
      dimension A(*)
      common /scfcon/ Cmp , Rhf , Ksm , Kspin , Ksw(2) , Nesk(2) , Nse , 
     &                Nsep , Nest , Nest1
      common /maxdm / Mdim , Mtt , Ntt , Mdsq , Mshifs
C     ******************************************************************
C     herm produces the hermitian conjugate of a complex matrix, or the
C     transpose of a real one
C
C     coded in august 75 by rs9b
C     ******************************************************************
C
C     ******************************************************************
C
C     real part: transpose
      do 100 i = 2 , NBASIS
         i1 = i - 1
         i1r = i1*Mdim
         do 50 j = 1 , i1
            i0 = (j-1)*Mdim + i
            i2 = i1r + j
            a0 = A(i0)
            A(i0) = A(i2)
            A(i2) = a0
 50      continue
 100  continue
C
      if ( KK.ge.2 .or. .not.Cmp ) return
C
C     imaginary part: transpose and change sign
      do 200 i = 2 , NBASIS
         i1 = i - 1
         ii = i + Mdsq
         i1i = i1*Mdim + Mdsq
         do 150 j = 1 , i1
            i0 = (j-1)*Mdim + ii
            i2 = i1i + j
            a0 = A(i0)
            A(i0) = -A(i2)
            A(i2) = -a0
 150     continue
 200  continue
      do 300 i = 1 , NBASIS
         i0 = (i-1)*Mdim + i + Mdsq
         A(i0) = -A(i0)
 300  continue
      return
C
      end
@* INDEX.
