@* matmul.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[INPUT:] NBASIS                                                    
\item[OUTPUT:] A                                                         
\item[INPUT:] B                                                         
\item[INPUT:] KAT                                                       
\item[INPUT:] KBT                                                       
\item[INPUT:] KCT                                                       
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    S       T                                              
\item[Uses]  CMP     MDIM    MDSQ    MTT     NTT     S       T      
             ZERO                                                   
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       HERM                                                   
\item[Called by]   FIRST   OFIX    SPINDM  TRACAB                         
                                                                    
\end{description}
@a
      subroutine matmul(NBASIS,A,B,KAT,KBT,KCT)
      implicit none
      double precision A , a0 , ai , ais , ar , ars , B , bi , Big , 
     &                 br , Filscr , Four , One , Onept5 , Pt5 , S , 
     &                 Small , T , Three , Two
      double precision Zero
      integer i , i1 , j , j1i , j1r , k , KAT , KBT , KCT , Ksm , 
     &        Kspin , Ksw , Mdim , Mdsq , Mshifs , Mtt , NBASIS , Nesk , 
     &        Nest , Nest1
      integer Nse , Nsep , Ntt
      logical Cmp , Rhf
      dimension A(*) , B(*)
      common /const / Zero , Pt5 , One , Onept5 , Two , Three , Four , 
     &                Big , Small
      common /scfcon/ Cmp , Rhf , Ksm , Kspin , Ksw(2) , Nesk(2) , Nse , 
     &                Nsep , Nest , Nest1
      common /maxdm / Mdim , Mtt , Ntt , Mdsq , Mshifs
      common /scr   / S(70) , T(70) , Filscr(5492)
C     ******************************************************************
C     evaluation of the matrix product a=a*b
C     real matrix multiplication
C     kat and kbt have two functions:
C     they control pre and post conjugation of the matrices
C     and indicate also whether the appropriate matrix is real or
C     complex
C     0 : no conjugation, matrix is complex (if complex arithmetics at a
C     1 : conjugation, matrix is complex
C     2 : no conjugation, matrix is real
C     3 : conjugation, matrix is real
C     kct:
C     0 : as above
C     1 : as above
C     2 : a and b have to be matices in symmetric storage mode.
C         a(1) contains after execution trace(a*b)
C
C     coded in august 75 by rs9b
C     ******************************************************************
C
C     ******************************************************************
C
C     hermitian conjugate if desired
      if ( mod(KAT,2).ne.0 ) call herm(NBASIS,A,KAT)
      if ( mod(KBT,2).ne.0 ) call herm(NBASIS,B,KBT)
C
      if ( Cmp ) then
C
C     ******************************************************************
C     complex
C     ******************************************************************
C
         if ( KCT.eq.2 ) then
C
C     ******************************************************************
C     trace (a*b) if kat.ne.0, or trace(a*b(dagger)) if kat.eq.0
C     ******************************************************************
C
C     complex
            if ( KBT.gt.1 ) goto 500
            ars = Zero
            if ( KAT.ne.0 ) then
C
               do 10 i = 1 , Ntt
                  ars = ars + A(i)*B(i) + A(i+Mtt)*B(i+Mtt)
 10            continue
            else
               do 20 i = 1 , Ntt
                  ars = ars + A(i)*B(i) - A(i+Mtt)*B(i+Mtt)
 20            continue
            endif
            goto 300
         elseif ( KAT.le.1 .or. KBT.le.1 ) then
            if ( KAT.gt.1 ) then
C
C     a is real, b is complex
               do 40 i = 1 , NBASIS
                  do 25 j = 1 , NBASIS
                     j1r = (j-1)*Mdim
                     S(j) = A(i+j1r)
 25               continue
                  do 30 j = 1 , NBASIS
                     j1r = (j-1)*Mdim
                     j1i = j1r + Mdsq
                     ars = Zero
                     ais = Zero
                     do 26 k = 1 , NBASIS
                        ar = S(k)
                        br = B(k+j1r)
                        bi = B(k+j1i)
                        ars = ars + ar*br
                        ais = ais + ar*bi
 26                  continue
                     A(i+j1r) = ars
                     A(i+j1r) = ars
                     A(i+j1i) = ais
 30               continue
 40            continue
            elseif ( KBT.gt.1 ) then
C
C     a is complex, b is real
               do 60 i = 1 , NBASIS
                  do 45 j = 1 , NBASIS
                     j1r = (j-1)*Mdim
                     j1i = j1r + Mdsq
                     S(j) = A(i+j1r)
                     T(j) = A(i+j1i)
 45               continue
                  do 50 j = 1 , NBASIS
                     j1r = (j-1)*Mdim
                     j1i = j1r + Mdsq
                     ars = Zero
                     ais = Zero
                     do 46 k = 1 , NBASIS
                        ar = S(k)
                        ai = T(k)
                        br = B(k+j1r)
                        ars = ars + ar*br
                        ais = ais + ai*br
 46                  continue
                     A(i+j1r) = ars
                     A(i+j1i) = ais
 50               continue
 60            continue
            else
C
C     all matrices are complex
               do 80 i = 1 , NBASIS
                  do 65 j = 1 , NBASIS
                     j1r = (j-1)*Mdim
                     j1i = j1r + Mdsq
                     S(j) = A(i+j1r)
                     T(j) = A(i+j1i)
 65               continue
                  do 70 j = 1 , NBASIS
                     j1r = (j-1)*Mdim
                     j1i = j1r + Mdsq
                     ars = Zero
                     ais = Zero
                     do 66 k = 1 , NBASIS
                        ar = S(k)
                        ai = T(k)
                        br = B(k+j1r)
                        bi = B(k+j1i)
                        ars = ars + ar*br - ai*bi
                        ais = ais + ar*bi + ai*br
 66                  continue
                     A(i+j1r) = ars
                     A(i+j1i) = ais
 70               continue
 80            continue
            endif
C
C     hermitian conjugate of the result matrix
            if ( KCT.ne.0 ) call herm(NBASIS,A,0)
            return
         endif
C
C     ******************************************************************
C     real
C     ******************************************************************
C
      elseif ( KCT.eq.2 ) then
         goto 500
      endif
      do 200 i = 1 , NBASIS
         do 100 j = 1 , NBASIS
            j1r = (j-1)*Mdim
            S(j) = A(j1r+i)
 100     continue
         do 150 j = 1 , NBASIS
            j1r = (j-1)*Mdim
            a0 = Zero
            do 120 k = 1 , NBASIS
               a0 = a0 + S(k)*B(j1r+k)
 120        continue
            A(i+j1r) = a0
 150     continue
 200  continue
      if ( KCT.ne.0 ) call herm(NBASIS,A,2)
      return
 300  ars = ars + ars
      i1 = 0
      do 400 i = 1 , NBASIS
         i1 = i1 + i
         ars = ars - A(i1)*B(i1)
 400  continue
      A(1) = ars
      return
C
C     real
 500  ars = Zero
      do 600 i = 1 , Ntt
         ars = ars + A(i)*B(i)
 600  continue
      goto 300
C
      end
@* INDEX.
