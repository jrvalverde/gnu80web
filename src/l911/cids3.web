@* cids3.
\section*{\sf Dummy Arguments}  \begin{description}
                                                                    
\item[OUTPUT:] JUMP                                                      
                                                                    
\end{description} \section*{\sf Common Variables}  \begin{description}
                                                                    
\item[Modifies]    CUT     DEN     DEN1    IAD3    IAS2    IBCKT   IDB3   
             IDUMP   IPRINT  IWD3    IWS2                           
\item[Transmits as argument]  A00     DAVAIL  IAD1    IAD2    ICIVAR  INFORB  IOPCL  
             IRWIBF  ISMODE  ISPECT  IW1SAV  IWD1    IWD2    LCIVAR 
             LENIBF  LNFORB  NBASIS  NOA     NOVAA   NOVAB   NOVBB  
             NVA     SAVAIL                                         
\item[Uses]  A00     CUTS    DAVAIL  DEN1    IAD1    IAD2    IAD3   
             IAS1    ICIVAR  IDB1    IDUMP   INFORB  IOP     IOPCL  
             IOUT    IPRINT  IRWIBF  ISMODE  ISPECT  IW1SAV  IWD1   
             IWD2    IWD3    IWS1    LCIVAR  LENIBF  LNFORB  NBASIS 
             NOA     NOBUC   NOVAA   NOVAB   NOVBB   NVA     SAVAIL 
             TWO     ZERO                                           
                                                                    
\end{description}  \section*{\sf External Subprograms}  \begin{description}
                                                                    
\item[Calls]       AACLOS  DD1SD4  FDUMP   ILSW    SCALP   SD5DS5  TREAD  
             TRSFR   TWRITE                                         
\item[Called by]   L911                                                   
                                                                    
\end{description}
@a
      subroutine cids3(JUMP)
      implicit none
      double precision A00 , Anorm , Atmchg , C , Cut , Cuts , Dehf , 
     &                 Delmax , Den , Den1 , Energy , F42 , Four , 
     &                 Half , One , Onept5 , scalp , Ten , Three , Two
      double precision V , W0 , Zero
      integer i , Iad1 , Iad2 , Iad3 , Ian , Ias1 , Ias2 , Ibasd , 
     &        Ibase , Ibckt , Ibfpad , Icharg , Icivar , Icon , Idb1 , 
     &        Idb10 , Idb2 , Idb3 , Idb4 , Idb5
      integer Idb6 , Idb7 , Idb8 , Idb9 , ideriv , Idmm , Idummy , 
     &        Idump , Ieval , Iextrp , Ifil , Iflag , Igeno , In , 
     &        Inforb , Intc , Intcnt , Intt , Ioab , Iop
      integer Iopcl , Iout , Ipcyc , Iprint , Ipunch , Iq , Ireset , 
     &        Irwibf , Iscr1 , Iscr2 , Iscr3 , Iscr4 , Iscr5 , Iscr6 , 
     &        Iscrd , Isd , Ismode , Ispect , Istat , Itotal
      integer Iux , Iw1sav , Iw2sav , Iwd1 , Iwd2 , Iwd3 , Iws1 , Iws2 , 
     &        JUMP , Kntt1 , Kntt2 , Last , Lcivar , Lenibf , Lextrp , 
     &        Ligen , Limint , Lnforb , Loab , Lpair
      integer Ls , Lspect , Maxbuc , Maxit , Mdv , method , Mode , 
     &        Multip , Nae , Natoms , Nbasis , Nbe , Ne , Niter , Noa , 
     &        Noa2 , Noa3 , Noaob , Noava , Noavb
      integer Nob , Nob2 , Nob3 , Nobuc , nobuc1 , nobuc9 , Nobva , 
     &        Nobvb , Norm , Novaa , Novab , Novbb , Nr , Nrorb , 
     &        Nrpext , Ntx , Nva , Nva2 , Nva3 , Nvavb
      integer Nvb , Nvb2 , Nvb3 , Nwiib , Nwpi
      integer Dbase , Dbasd , dcount
      logical Davail , Savail
      dimension Ibckt(50)
      common /iop   / Iop(50)
      common /mol   / Natoms , Icharg , Multip , Nae , Nbe , Ne , 
     &                Nbasis , Ian(101) , Atmchg(100) , C(300)
      common /v     / V(20000) , Mdv
      common /rwfp  / Igeno , Ligen , Inforb , Lnforb , Icivar , 
     &                Lcivar , Iextrp , Lextrp
      common /orb   / Ispect , Lspect , Nrorb , Noa , Nva , Nob , Nvb , 
     &                Noaob , Noava , Noavb , Nobva , Nobvb , Nvavb , 
     &                Noa2 , Noa3 , Nob2 , Nob3 , Nva2 , Nva3 , Nvb2 , 
     &                Nvb3 , Novaa , Novab , Novbb , Maxbuc , Ieval , 
     &                Ioab , Loab
      common /civar / A00 , Anorm , W0 , Den , Energy , Dehf , Cuts , 
     &                Delmax , Maxit , Ipcyc , Norm , Isd , Iflag , 
     &                Davail , Savail , Niter
      common /nobuc / Nobuc
      common /bucknr/ Idb1 , Idb2 , Idb3 , Idb4 , Idb5 , Idb6 , Idb7 , 
     &                Idb8 , Idb9 , Idb10 , Idmm(11) , Iad1 , Iad2 , 
     &                Iad3 , Ias1 , Ias2 , Iwd1 , Iwd2 , Iwd3 , Iws1 , 
     &                Iws2 , Iscr1 , Iscr2 , Iscr3 , Iscr4 , Iscr5 , 
     &                Iscr6 , Iscrd(13)
      common /wtild / Cut , Ls(81) , Lpair , Nr , Intt , Intc
      common /locibf/ Irwibf , Lenibf
      common /ibf   / Ismode , Mode , Istat , Last , Ntx , Iux(5) , 
     &                Icon , Nrpext , Kntt1 , Kntt2 , Ibase , Ibasd(2) , 
     &                Dbase , Dbasd(2) , Ireset(2) , Iq , Ifil , 
     &                Intcnt , Itotal , Limint , Nwpi , Nwiib , Ibfpad
      common /wsav  / Iw1sav , Iw2sav
      common /const / Zero , Half , One , Onept5 , Two , Three , Four , 
     &                Ten , F42
      common /constr/ Iopcl
      common /io    / In , Iout , Ipunch
      common /print / Iprint
      common /dump  / Idump , Idummy
      equivalence (Den,Den1)
      equivalence (Ibckt(1),Idb1)
C
C
C     ******************************************************************
C
C     obtain vector w:   w(s) = sum  v(st) * a(t)     for s>0
C                               t>0
C     s and t being double- and single substitutions
C
C     sept 76/seeger and krishnan
C
C     ******************************************************************
C
C
C
C
C
99001 format (34x,'CONTRIBUTION FROM DD1=',d18.8)
C
C
      method = Iop(5)
      ideriv = Iop(15)
      Iprint = Iop(33)
      Idump = Iop(34)
C
      call ilsw(2,1,Iopcl)
C
C     initiate common/orb/, /civar/
      call tread(Inforb,Ispect,Lnforb,1,Lnforb,1,0)
      call tread(Icivar,A00,Lcivar,1,Lcivar,1,0)
C
      Den = Zero
      if ( Davail ) then
C
C     initiate bucket numbers
         do 50 i = 1 , Nobuc
            Ibckt(i) = i
 50      continue
C
C     numbers for routine volatile buckets.
         nobuc1 = Nobuc + 1
         nobuc9 = Nobuc + 9
         do 100 i = nobuc1 , nobuc9
            Ibckt(i) = 3000 + i
 100     continue
C
         if ( Iopcl.eq.0 ) then
            Ias2 = Ias1
            Iws2 = Iws1
            Iad3 = Iad1
            Iwd3 = Iwd1
            Idb3 = Idb1
         endif
C
C     initialize common ibf.
         call tread(Irwibf,Ismode,Lenibf,1,Lenibf,1,0)
         Cut = Cuts
C
C     ******************************************************************
C     dd (ab//cd) and sd (ab//ci)
C     ******************************************************************
         if ( method.eq.0 .or. method.eq.4 .or. method.eq.5 )
     &        call sd5ds5(Davail,Savail)
C
         call dd1sd4(Savail,method,Nbasis)
C
C     calculate w(alpha,alpha) for closed shell
         if ( Iopcl.eq.0 ) call aaclos(Iwd2,Iwd1,Noa,Nva)
C
C     save w for use in the ci-derivative calculation.
         if ( ideriv.gt.0 ) call trsfr(Novab,Iwd2,Iw1sav)
C
         if ( Iopcl.eq.0 ) Den1 = Two*scalp(Iad1,Iwd1,Novaa)
     &                            + scalp(Iad2,Iwd2,Novab)
         if ( Iopcl.ne.0 ) Den1 = scalp(Iad1,Iwd1,Novaa)
     &                            + scalp(Iad2,Iwd2,Novab)
     &                            + scalp(Iad3,Iwd3,Novbb)
         if ( Iprint.gt.0 ) write (Iout,99001) Den1
C
C
         call twrite(Icivar,A00,Lcivar,1,Lcivar,1,0)
      endif
C
C     ******************************************************************
C     exit
C     ******************************************************************
C
C     ................
      if ( Idump.gt.1 ) call fdump
      JUMP = 101
C     ................
C
      return
C
      end
@* INDEX.
