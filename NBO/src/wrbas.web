@*wrbas.
\section*{\sf Dummy Arguments}  \begin{description}

\item[INPUT:] SCR
\item[INPUT:] ISCR
\item[INPUT:] LFN

\end{description} \section*{\sf Common Variables}  \begin{description}

\item[Modifies]     NOTHING 
\item[Uses]  IATNO   LANG    LCTR    LFNPR   NATOMS

\end{description}  \section*{\sf External Subprograms}  \begin{description}

\item[Calls]       FEBAS   FECOOR  FETITL
\item[Called by]   NAODRV  NAOSIM

\end{description}
@a
C*****************************************************************************
      subroutine wrbas(SCR,ISCR,LFN)
C*****************************************************************************
C
C  save the AO basis set information on an external file:
C
C-----------------------------------------------------------------------------
      implicit none
      integer i , i1 , i2 , i3 , i4 , i5 , i6 , i7 , i8 , i9 , Iatcr ,
     &        Iatno , Ino , ISCR , Ispin , Iznuc , j , j1 , j2 , j3
      integer j4 , k , Lang , Lctr , LFN , Lfnao , Lfnarc , Lfndaf ,
     &        Lfndef , Lfndm , Lfnin , Lfnmo , Lfnnab , Lfnnao ,
     &        Lfnnbo , Lfnnho , Lfnnlm , Lfnpna , Lfnpnb , Lfnpnh
      integer Lfnpnl , Lfnppa , Lfnpr , Ll , Lu , MAXATM , MAXBAS ,
     &        Munit , Mxao , Mxaolm , Mxbo , Natoms , Nbas , ncomp ,
     &        Ndim , nexp , Norbs , nprim , nptr , nshell
      double precision SCR
C
      parameter (MAXATM=99,MAXBAS=500)
      common /nbinfo/ Ispin , Natoms , Ndim , Nbas , Mxbo , Mxao ,
     &                Mxaolm , Munit
      common /nbatom/ Iatno(MAXATM) , Ino(MAXATM) , Norbs(MAXATM) ,
     &                Ll(MAXATM) , Lu(MAXATM) , Iznuc(MAXATM) ,
     &                Iatcr(MAXATM)
      common /nbao  / Lctr(MAXBAS) , Lang(MAXBAS)
      common /nbio  / Lfnin , Lfnpr , Lfnao , Lfnpna , Lfnnao , Lfnpnh ,
     &                Lfnnho , Lfnpnb , Lfnnbo , Lfnpnl , Lfnnlm ,
     &                Lfnmo , Lfndm , Lfnnab , Lfnppa , Lfnarc ,
     &                Lfndaf , Lfndef
C
      dimension SCR(1) , ISCR(1)
C
C  fetch the number of shells nshell, the number of exponents nexp,
C  the ncomp, nprim, and nptr arrays, and the orbital exponents and
C  coefficients from the NBO daf:
C
      call febas(nshell,nexp,ISCR)
C
C  if nshell is zero, then no basis set info has been stored in the
C  daf:
C
      if ( nshell.eq.0 ) then
         write (Lfnpr,99001)
         return
      endif
C
C  partition the scratch arrays:  (note that scr and iscr occupy the same
C  space in memory)
C
C  iscr: (integer)
C
C   nshell  nexp   ncomp   nprim   nptr
C  +------+------+-------+-------+-------+-----------------------------------
C                i1      i2      i3
C
C  scr: (real)
C                                                                     atcoor
C                                           exp   cs   cp   cd   cf   title
C  ---------------------------------------+-----+----+----+----+----+--------
C                                         i4    i5   i6   i7   i8   i9
C
      i1 = 3                     
C iscr(i1) = ncomp(1..nshell)
      i2 = i1 + nshell           
C iscr(i2) = nprim(1..nshell)
      i3 = i2 + nshell           
C iscr(i3) = nptr(1..nshell)
      i4 = 2 + (3*nshell+1)/2    
C scr(i4)  = exp(1..nexp)
      i5 = i4 + nexp             
C scr(i5)  = cs(1..nexp)
      i6 = i5 + nexp             
C scr(i6)  = cp(1..nexp)
      i7 = i6 + nexp             
C scr(i7)  = cd(1..nexp)
      i8 = i7 + nexp             
C scr(i8)  = cf(1..nexp)
      i9 = i8 + nexp             
C scr(i9)  = title(10) or atcoor(3*natoms)
C     iend = i9 + max0(3*natoms,10)
C
C  fetch job title and write it to the aoinfo external file:
C
      call fetitl(SCR(i9))
C
C  begin writing to the aoinfo external file:
C
      write (LFN,99002) (SCR(i9+i),i=0,9)
      write (LFN,99003) Natoms , nshell , nexp
C
C  fetch the atomic coordinates:
C
      call fecoor(SCR(i9))
C
C  write atomic numbers and coordinates to external file:
C
      j = 0
      do 100 i = 1 , Natoms
         write (LFN,99004) Iatno(i) , (SCR(i9+j+k),k=0,2)
         j = j + 3
 100  continue
      write (LFN,99005)
C
C  write out information about each shell in the basis set:
C
C     nctr(i)  --  atomic center of the ith shell
C
C     ncomp(i) --  number of components in the ith shell
C
C     nptr(i)  --  pointer for the ith shell into the primitive parameters
C                  of exp, cs, cp, cd, and cf
C
C     nprim(i) --  number of primitive functions in the ith shell
C
C     label(1..ncomp(i)) -- symmetry labels for the orbitals of this shell
C
      j1 = 1
      j2 = i1
      j3 = i3
      j4 = i2
      do 200 i = 1 , nshell
         ncomp = ISCR(j2)
         nprim = ISCR(j3)
         nptr = ISCR(j4)
         write (LFN,99006) Lctr(j1) , ncomp , nprim , nptr
         write (LFN,99006) ((Lang(j1+j)),j=0,ncomp-1)
         j1 = j1 + ncomp
         j2 = j2 + 1
         j3 = j3 + 1
         j4 = j4 + 1
 200  continue
      write (LFN,99005)
C
C  write out the primitive parameters:
C
      write (LFN,99007) (SCR(i4+i),i=0,nexp-1)
      write (LFN,99008)
      write (LFN,99007) (SCR(i5+i),i=0,nexp-1)
      write (LFN,99008)
      write (LFN,99007) (SCR(i6+i),i=0,nexp-1)
      write (LFN,99008)
      write (LFN,99007) (SCR(i7+i),i=0,nexp-1)
      write (LFN,99008)
      write (LFN,99007) (SCR(i8+i),i=0,nexp-1)
      return
C
99001 format (/1x,'No basis set information is stored on the NBO direct'
     &        ,' access file.',/1x,
     &        'Thus, no `AOINFO'' file can be written.')
99002 format (1x,9A8,a7,/1x,'Basis set information needed for plotting '
     &        ,'orbitals',/1x,75('-'))
99003 format (1x,3I6,/1x,75('-'))
99004 format (1x,i4,3(2x,f12.9))
99005 format (1x,75('-'))
99006 format (1x,10I6)
99007 format (2x,4E18.9)
99008 format (1x)
      end
@* INDEX.
