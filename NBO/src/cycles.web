@*cycles.
\section*{\sf Dummy Arguments}  \begin{description}

\item[INPUT:] ITER
\item[OUTPUT:] THRESH
\item[INPUT:] GUIDE
\item[INPUT:] BNDOCC
\item[OUTPUT:] TOPO
\item[OUTPUT:] ICONT

\end{description} \section*{\sf Common Variables}  \begin{description}

\item[Modifies]    IORDER  JORDER
\item[Uses]  ACCTHR  IATNO   IBXM    ICHOOS  IORDER  IPSEUD  ISPIN
             IZNUC   JORDER  JPRINT  LABEL   LFNPR   NATOMS  NBAS
             NDIM    THRSET

\end{description}  \section*{\sf External Subprograms}  \begin{description}

\item[Calls]        NOTHING 
\item[Called by]   CHOOSE  NATHYB

\end{description}
@a
C*****************************************************************************
      subroutine cycles(ITER,THRESH,GUIDE,BNDOCC,TOPO,ICONT)
C*****************************************************************************
      implicit none
      double precision Accthr , Athr , best , BNDOCC , Crtset , dev ,
     &                 dev1 , devmin , devthr , Dthr , E2thr , Ethr ,
     &                 GUIDE , hundrd , one , onept5 , Prjset , Pthr ,
     &                 rho , rhomin
      double precision small , sum , sumlew , tenth , three , THRESH ,
     &                 thrmin , Thrset , TOPO , totele , zero
      integer i , I3ctr , iat , iat1 , iat2 , iat3 , Iatcr , Iathy ,
     &        Iatno , ib , ibadl , ibadnl , Ibxm , Ichoos , ICONT ,
     &        iflg , Ino , Iorder , Iprint , Ipseud
      integer Ispin , ITER , Iw3c , Iwapol , Iwcubf , Iwdetl , Iwdm ,
     &        Iwfock , Iwhybs , Iwmulp , Iwpnao , Iwtnab , Iwtnao ,
     &        Iwtnbo , Iznuc , j , jat , jbadl , Jcore , jflg
      integer Jorder , Jprint , jter , jtermx , Kopt , l3c , Label ,
     &        Larc , lbd , lcr , Lfnao , Lfnarc , Lfndaf , Lfndef ,
     &        Lfndm , Lfnin , Lfnmo , Lfnnab , Lfnnao , Lfnnbo
      integer Lfnnho , Lfnnlm , Lfnpna , Lfnpnb , Lfnpnh , Lfnpnl ,
     &        Lfnppa , Lfnpr , Ll , llp , lstar , Lstocc , Lu , m3c ,
     &        MAXATM , MAXBAS , mbd , mcr , mecp , mlp
      integer Munit , Mxao , Mxaolm , Mxbo , N3ctr , Natoms , Nbas ,
     &        Nbotyp , Nbouni , nctr , Ndim , nel , Norbs , Ntopo
C
      parameter (MAXATM=99,MAXBAS=500)
      common /nbinfo/ Ispin , Natoms , Ndim , Nbas , Mxbo , Mxao ,
     &                Mxaolm , Munit
      common /nbbas / Label(MAXBAS,6) , Nbouni(MAXBAS) , Nbotyp(MAXBAS)
     &                , Lstocc(MAXBAS) , Ibxm(MAXBAS) , Larc(MAXBAS) ,
     &                Iathy(MAXBAS,3)
      common /nbthr / Thrset , Prjset , Accthr , Crtset , E2thr , Athr ,
     &                Pthr , Ethr , Dthr
      common /nbatom/ Iatno(MAXATM) , Ino(MAXATM) , Norbs(MAXATM) ,
     &                Ll(MAXATM) , Lu(MAXATM) , Iznuc(MAXATM) ,
     &                Iatcr(MAXATM)
      common /nbtopo/ Iorder(MAXATM) , Jorder(MAXATM) ,
     &                Ntopo(MAXATM,MAXATM) , N3ctr , I3ctr(10,3)
      common /nbopt / Iwdm , Iw3c , Iwapol , Iwhybs , Iwpnao , Iwtnao ,
     &                Iwtnab , Iwtnbo , Iwfock , Iwcubf , Ipseud ,
     &                Kopt , Iprint , Iwdetl , Iwmulp , Ichoos , Jcore ,
     &                Jprint(60)
      common /nbio  / Lfnin , Lfnpr , Lfnao , Lfnpna , Lfnnao , Lfnpnh ,
     &                Lfnnho , Lfnpnb , Lfnnbo , Lfnpnl , Lfnnlm ,
     &                Lfnmo , Lfndm , Lfnnab , Lfnppa , Lfnarc ,
     &                Lfndaf , Lfndef
C
      dimension GUIDE(Natoms,Natoms) , BNDOCC(Ndim) ,
     &          TOPO(Natoms,Natoms)
C
      save jter , devmin , rhomin , best , rho , jbadl
C
      data lcr , lbd , l3c , llp , lstar/2HCR , 2HBD , 2H3C , 2HLP ,
     &     1H*/
      data small , zero , tenth , one , onept5 , three , hundrd/1.0D-4 ,
     &     0.0D0 , 0.1D0 , 1.0D0 , 1.5D0 , 3.0D0 , 1.0D2/
      data devthr/0.1D0/
      data jtermx/9/
C
C  subroutine cycles controls the search for an acceptable resonance
C  structure:
C
C  arguments:
C        iter   : iteration counter incremented by the calling routine
C        thresh : occupancy threshold used in search for nbos
C        guide  : wiberg bond index
C        bndocc : array containing the NBO occupancies
C        topo   : bond index matrix to be compared with the wiberg indices
C        icont  : control flag (see below)
C
C  iter, guide, and bndocc are unaltered by this routine
C  thresh is modified by this routine, if the resonance keyword is selected
C  the topo matrix is constructed by this routine
C
C  control flag : (set by this routine)
C    icont =  2 : an acceptable lewis structure has been found, continue
C          =  1 : an acceptable lewis structure has been found, recompute the
C                 nbos for this structure
C          =  0 : bogus lewis structure, terminate search for nbos
C          = -1 : occupancy threshold and/or atom ordering have been
C                 changed.  repeat the search for nbos.
C
C  set atom permuting counter and minimum deviation in guide-topo:
C
      if ( ITER.eq.1 ) then
         jter = 0
         ICONT = -1
      endif
      jter = jter + 1
      if ( jter.eq.1 ) devmin = hundrd
C
C  the minimum occupancy threshold is 1.5e (0.5e for open shell):
C
      thrmin = onept5
      if ( Ispin.ne.0 ) thrmin = thrmin - one
C
C  determine the number of low occupancy orbitals in the lewis structure:
C
      ibadl = 0
      ibadnl = 0
      sumlew = zero
      totele = zero
      do 100 i = 1 , Nbas
         totele = totele + BNDOCC(i)
         if ( Label(Ibxm(i),2).ne.lstar ) then
            sumlew = sumlew + BNDOCC(i)
            if ( BNDOCC(i).lt.THRESH ) ibadl = ibadl + 1
         else
            if ( BNDOCC(i).gt.abs(Accthr) ) ibadnl = ibadnl + 1
         endif
 100  continue
      nel = totele + tenth
      totele = nel
      sum = totele - sumlew
C
C  count the ecp electrons in the lewis structure:
C
      if ( Ipseud.ne.0 ) then
         mecp = 0
         do 150 iat = 1 , Natoms
            mecp = mecp + Iatno(iat) - Iznuc(iat)
 150     continue
         if ( Ispin.ne.0 ) mecp = mecp/2
         sumlew = sumlew + dble(mecp)
      endif
C
C  keep track of the best lewis structure found so far:
C
      if ( jter.eq.1 ) rhomin = hundrd
      if ( ITER.eq.1 .or. sum.lt.rho ) then
         best = THRESH
         rho = sum
         jbadl = ibadl
         do 200 i = 1 , Natoms
            Jorder(i) = Iorder(i)
 200     continue
      endif
C
C  count the number of core, lone pair, and bonding orbitals in this
C  resonance structure:
C
      mcr = 0
      mbd = 0
      m3c = 0
      mlp = 0
      do 300 i = 1 , Nbas
         if ( Label(i,1).eq.lcr .and. Label(i,2).ne.lstar ) mcr = mcr +
     &        1
         if ( Label(i,1).eq.lbd .and. Label(i,2).ne.lstar ) mbd = mbd +
     &        1
         if ( Label(i,1).eq.l3c .and. Label(i,2).ne.lstar ) m3c = m3c +
     &        1
         if ( Label(i,1).eq.llp .and. Label(i,2).ne.lstar ) mlp = mlp +
     &        1
 300  continue
C
C  build the topo matrix from lone pairs and 2- and 3-center bonds:
C
      do 400 i = 1 , Natoms
         do 350 j = 1 , Natoms
            TOPO(i,j) = zero
 350     continue
 400  continue
C
      do 500 i = 1 , Nbas
         ib = Ibxm(i)
         if ( Label(ib,1).ne.lcr .and. Label(ib,2).ne.lstar ) then
            iat1 = Label(ib,4)
            nctr = 1
            iat2 = Label(ib,5)
            if ( iat2.ne.0 ) nctr = 2
            iat3 = Label(ib,6)
            if ( iat3.ne.0 ) nctr = 3
            if ( nctr.eq.1 ) then
               TOPO(iat1,iat1) = TOPO(iat1,iat1) + one
            elseif ( nctr.eq.2 ) then
               TOPO(iat1,iat2) = TOPO(iat1,iat2) + one
               TOPO(iat2,iat1) = TOPO(iat2,iat1) + one
            else
               TOPO(iat1,iat2) = TOPO(iat1,iat2) + one/three
               TOPO(iat2,iat1) = TOPO(iat2,iat1) + one/three
               TOPO(iat1,iat3) = TOPO(iat1,iat3) + one/three
               TOPO(iat3,iat1) = TOPO(iat3,iat1) + one/three
               TOPO(iat2,iat3) = TOPO(iat2,iat3) + one/three
               TOPO(iat3,iat2) = TOPO(iat3,iat2) + one/three
            endif
         endif
 500  continue
C
C  determine the largest off-diagonal element of guide-topo:
C
      dev = zero
      do 600 j = 2 , Natoms
         do 550 i = 1 , j - 1
            if ( GUIDE(i,j)-TOPO(i,j).gt.dev ) then
               dev = GUIDE(i,j) - TOPO(i,j)
               iat = i
               jat = j
            endif
 550     continue
 600  continue
C
C  write info about this resonance structure:
C
      if ( Jprint(5).eq.1 ) then
         if ( ITER.eq.1 ) write (Lfnpr,99001)
         write (Lfnpr,99002) ITER , jter , abs(THRESH) , sumlew , sum ,
     &                       mcr , mbd , m3c , mlp , ibadl , ibadnl ,
     &                       dev
      endif
C
C  decide if this structure is acceptable:
C
C   *  accept the structure if choose was employed.
C   *  accept the structure if there is only one atom.
C   *  accept the structure if there are no low occupancy lewis orbitals
C      and dev is less than devthr.
C   *  accept the structure if the nobond option was selected.
C
      if ( ibadl.eq.0 .and. dev.lt.devthr ) then 
C good resonance structure
         if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
         if ( Jprint(5).eq.1 ) write (Lfnpr,99004)
         ICONT = 2
         return
      elseif ( Natoms.eq.1 ) then                
C only one atom
         if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
         if ( Jprint(5).eq.1 ) write (Lfnpr,99005)
         ICONT = 2
         return
      elseif ( Ichoos.eq.1 ) then                
C directed NBO search
         if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
         if ( Jprint(5).eq.1 ) write (Lfnpr,99006)
         ICONT = 2
         return
      elseif ( Jprint(10).ne.0 ) then            
C nobond option selected
         if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
         if ( Jprint(5).eq.1 ) write (Lfnpr,99007)
         ICONT = 2
         return
      endif
C
C  structure accepted due to the specification of the resonance keyword
C  or the occupancy threshold.  otherwise, accept the structure only if
C  there are no high occupancy lewis orbitals:
C
      if ( ICONT.eq.1 ) then
         if ( Thrset.ge.zero ) then
            if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
            if ( Jprint(5).eq.1 ) write (Lfnpr,99008)
            ICONT = 2
         elseif ( Jprint(14).ne.0 ) then
            if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
            if ( Jprint(5).eq.1 ) write (Lfnpr,99009)
            ICONT = 2
         elseif ( ibadl.ne.0 ) then
            if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
            if ( Jprint(5).eq.1 ) write (Lfnpr,99004)
            ICONT = 2
         endif
         return
      endif
C
C  if dev.eq.devmin.and.sum.eq.rhomin or too many atoms permutations,
C  stop atom permutations:
C
      if ( (abs(dev-devmin).lt.small .and. abs(sum-rhomin).lt.small)
     &     .or. jter.ge.jtermx ) then
C
C  if the occupancy threshold was set by the user, accept the best
C  structure:
C
         if ( Thrset.ge.zero ) then
            if ( abs(sum-rho).lt.small ) then
               if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
               if ( Jprint(5).eq.1 ) write (Lfnpr,99008)
               ICONT = 2
            else
               do 610 i = 1 , Natoms
                  Iorder(i) = Jorder(i)
 610           continue
               jter = 0
               ICONT = 1
            endif
C
C  if the resonance keyword was specified, pick the best resonance structure
C  for this occupancy threshold, and possibly decrement the threshold and
C  continue the search:
C
         elseif ( Jprint(14).ne.0 ) then
            THRESH = THRESH - tenth
            if ( thrmin-THRESH.gt.small ) then
               THRESH = THRESH + tenth
               if ( abs(THRESH-best).lt.small .and. abs(sum-rho)
     &              .lt.small ) then
                  if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
                  if ( Jprint(5).eq.1 ) write (Lfnpr,99009)
                  ICONT = 2
               else
                  do 615 i = 1 , Natoms
                     Iorder(i) = Jorder(i)
 615              continue
                  THRESH = best
                  jter = 0
                  ICONT = 1
               endif
            else
               do 620 i = 1 , Natoms
                  Iorder(i) = Jorder(i)
 620           continue
               jter = 0
               ICONT = -1
            endif
C
C  otherwise, accept the best structure, but only if it had no lewis
C  orbitals with occupancy less than the occupancy threshold:
C
         elseif ( abs(sum-rho).lt.small .and. ibadl.eq.0 ) then
            if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
            if ( Jprint(5).eq.1 ) write (Lfnpr,99004)
            ICONT = 2
         elseif ( jbadl.eq.0 ) then
            do 640 i = 1 , Natoms
               Iorder(i) = Jorder(i)
 640        continue
            jter = 0
            ICONT = 1
         else
            if ( Jprint(5).eq.1 ) write (Lfnpr,99003)
            if ( Jprint(5).eq.1 ) write (Lfnpr,99010)
            ICONT = 0
         endif
         return
C
C  loop through atom ordering to find alternative resonance structures:
C
      else
         if ( dev.lt.devmin ) devmin = dev
         if ( sum.lt.rhomin ) rhomin = sum
         if ( iat.eq.Iorder(1) .and. jat.eq.Iorder(2) ) then
            dev1 = zero
            do 660 j = 2 , Natoms
               do 650 i = 1 , j - 1
                  if ( GUIDE(i,j)-TOPO(i,j).gt.dev1 ) then
                     if ( (i.ne.Iorder(1) .and. j.ne.Iorder(2)) .and.
     &                    (j.ne.Iorder(1) .and. i.ne.Iorder(2)) ) then
                        dev1 = GUIDE(i,j) - TOPO(i,j)
                        iat = i
                        jat = j
                     endif
                  endif
 650           continue
 660        continue
         endif
C
         jflg = 0
         do 700 i = Natoms , 2 , -1
            if ( Iorder(i).eq.jat ) jflg = 1
            if ( jflg.eq.1 ) Iorder(i) = Iorder(i-1)
 700     continue
         Iorder(1) = jat
         iflg = 0
         do 750 i = Natoms , 2 , -1
            if ( Iorder(i).eq.iat ) iflg = 1
            if ( iflg.eq.1 ) Iorder(i) = Iorder(i-1)
 750     continue
         Iorder(1) = iat
         ICONT = -1
      endif
      return
C
99001 format (/1x,'                      Occupancies       Lewis ',
     &        'Structure    Low   High',/1x,
     &        '          Occ.    --------',
     &        '-----------  -----------------   occ   occ',/1x,
     &        ' Cycle ',
     &        '  Thresh.   Lewis   Non-Lewis     CR  BD  3C  LP    (L) '
     &        ,'  (NL)   Dev',/1x,77('='))
99002 format (1x,i3,'(',i1,')',3x,f5.2,f12.5,f10.5,3x,4I4,2x,i4,3x,i4,
     &        3x,f5.2)
99003 format (1x,77('-'))
99004 format (/1x,'Structure accepted: No low occupancy Lewis orbitals')
99005 format (/1x,'Structure accepted: Only a single atom')
99006 format (/1x,'Structure accepted: NBOs selected via the $CHOOSE ',
     &        'keylist')
99007 format (/1x,'Structure accepted: Search for bonds prevented ',
     &        'by NOBOND keyword')
99008 format (/1x,'Structure accepted: Occupancy threshold (THRESH) ',
     &        'set by user')
99009 format (/1x,'Structure accepted: RESONANCE keyword permits ',
     &        'strongly delocalized structure')
99010 format (/1x,'Only strongly delocalized resonance structures can',
     &        ' be found.',/1x,
     &        'The default procedure is to abort the NBO ','search.')
      end
@* INDEX.
