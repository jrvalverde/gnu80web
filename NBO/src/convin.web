@*convin.
\section*{\sf Dummy Arguments}  \begin{description}

\item[INPUT:] IJ
\item[INPUT:] LEN
\item[OUTPUT:] IK
\item[OUTPUT:] ERROR

\end{description} \section*{\sf Common Variables}  \begin{description}

\item[Modifies]     NOTHING 
\item[Uses]   NOTHING 

\end{description}  \section*{\sf External Subprograms}  \begin{description}

\item[Calls]        NOTHING 
\item[Called by]   KEYPAR

\end{description}
@a
C*****************************************************************************
      subroutine convin(IJ,LEN,IK,ERROR)
C*****************************************************************************
      implicit none
      integer i , IJ , IK , il , int , j , jj , LEN , mult
      dimension IJ(1)
      dimension int(10)
      logical ERROR
C
      data int/1H0 , 1H1 , 1H2 , 1H3 , 1H4 , 1H5 , 1H6 , 1H7 , 1H8 ,
     &     1H9/
C
C  convert the array ij(len) into an integer ik:
C
      ERROR = .false.
      if ( LEN.le.0 ) then
         ERROR = .true.
         return
      endif
C
C  make sure all elements of ij are integers:
C
      il = 0
      mult = 1
      do 200 i = LEN , 1 , -1
         do 50 j = 1 , 10
            jj = j - 1
            if ( IJ(i).eq.int(j) ) goto 100
 50      continue
         ERROR = .true.
         return
C
 100     il = il + jj*mult
         mult = mult*10
 200  continue
      IK = il
      return
      end
@* INDEX.
