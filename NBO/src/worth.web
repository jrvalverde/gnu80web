@*worth.
\section*{\sf Dummy Arguments}  \begin{description}

\item[OUTPUT:] S
\item[OUTPUT:] T
\item[INPUT:] BLK
\item[INPUT:] LIST
\item[INPUT:] NDIM
\item[INPUT:] NBAS
\item[INPUT:] N
\item[INPUT:] OCC
\item[OUTPUT:] EVAL
\item[OUTPUT:] BIGBLK

\end{description} \section*{\sf Common Variables}  \begin{description}

\item[Modifies]     NOTHING 
\item[Uses]  LFNPR

\end{description}  \section*{\sf External Subprograms}  \begin{description}

\item[Calls]       JACOBI
\item[Called by]   NAO

\end{description}
@a
C*****************************************************************************
      subroutine worth(S,T,BLK,LIST,NDIM,NBAS,N,OCC,EVAL,BIGBLK)
C*****************************************************************************
      implicit none
      double precision BIGBLK , BLK , danger , diagth , eigenv , EVAL ,
     &                 OCC , one , S , sij , smlest , T , tik , tki ,
     &                 tkj , toosml , wtmax , wtthr , zero
      integer i , im1 , ip , j , jp , jp1 , k , kp , Lfnao , Lfnarc ,
     &        Lfndaf , Lfndef , Lfndm , Lfnin , Lfnmo , Lfnnab ,
     &        Lfnnao , Lfnnbo , Lfnnho , Lfnnlm
      integer Lfnpna , Lfnpnb , Lfnpnh , Lfnpnl , Lfnppa , Lfnpr ,
     &        LIST , N , NBAS , NDIM , ntime
C******************************************************************
C
C   worth: occupancy weighted orthogonalization subroutine
C
C   s:           full overlap matrix (pure AO basis)
C                 (note: upper triangle used for scratch, but restored again)
C   t:           pure AO to pre-nao transformation
C   list:        list of orbitals to be orthogonalized
C   n:           number of orbitals in list
C   occ:         list of symmetry averaged occupancy weightings
C
C   note:    blk and bigblk share the same storage but are
C               dimensioned differently.
C
C******************************************************************
      dimension S(NDIM,NDIM) , T(NDIM,NDIM) , BLK(N,N)
      dimension OCC(NDIM) , LIST(NDIM) , EVAL(NDIM) , BIGBLK(NDIM,NDIM)
      common /nbio  / Lfnin , Lfnpr , Lfnao , Lfnpna , Lfnnao , Lfnpnh ,
     &                Lfnnho , Lfnpnb , Lfnnbo , Lfnpnl , Lfnnlm ,
     &                Lfnmo , Lfndm , Lfnnab , Lfnppa , Lfnarc ,
     &                Lfndaf , Lfndef
      data zero , one/0.0D0 , 1.0D0/
      data ntime/0/
C
C  important constants:
C           wtthr           all weighting factors smaller than wtthr are set
C                            to the value of wtthr.
C           diagth          threshold for matrix diagonalization used in
C                            subroutine jacobi.  in jacobi, this constant
C                            is called "doneth".
C           danger          criterion for deciding that the job should be
C                            aborted due to numerical problems caused by near
C                            linear dependencies in the basis set.  all
C                            eigenvalues of the weighted overlap matrix must
C                            be greater than diagth*danger.
C
      data wtthr , diagth , danger/1.0D-3 , 1.0D-12 , 1.0D3/
C
      ntime = ntime + 1
C  multiply the weight by a constant so that the maximum weight is one,
C   and set any resulting weight that is less than wtthr to the value of wtthr:
      wtmax = zero
      do 100 i = 1 , N
         ip = LIST(i)
         if ( OCC(ip).gt.wtmax ) wtmax = OCC(ip)
 100  continue
      do 200 i = 1 , N
         ip = LIST(i)
         EVAL(ip) = OCC(ip)/wtmax
         if ( EVAL(ip).lt.wtthr ) EVAL(ip) = wtthr
 200  continue
C  form the weighted pre-nao vectors:
      do 300 j = 1 , N
         jp = LIST(j)
         do 250 i = 1 , NBAS
            T(i,jp) = T(i,jp)*EVAL(jp)
 250     continue
 300  continue
C  form the weighted overlap matrix of the vectors in the upper triangle of s:
      do 400 i = 1 , N
         ip = LIST(i)
         do 350 j = 1 , NBAS
            sij = zero
            do 320 k = 1 , NBAS
               tki = T(k,ip)
               if ( tki.ne.zero ) sij = sij + tki*S(k,j)
 320        continue
            BIGBLK(j,i) = sij
 350     continue
 400  continue
      do 500 i = 1 , N
         do 450 j = 1 , i
            jp = LIST(j)
            sij = zero
            do 420 k = 1 , NBAS
               tkj = T(k,jp)
               if ( tkj.ne.zero ) sij = sij + BIGBLK(k,i)*tkj
 420        continue
            S(j,i) = sij
 450     continue
 500  continue
C  diagonalize s-tilde (the weighted overlap matrix):
      call jacobi(N,S,EVAL,BLK,NDIM,N,0)
C
C  form the inverse sqrt of the overlap matrix of these weighted vectors:
      smlest = one
      toosml = diagth*danger
      do 600 i = 1 , N
         eigenv = EVAL(i)
         if ( eigenv.lt.toosml ) goto 1100
         EVAL(i) = one/sqrt(eigenv)
         if ( eigenv.lt.smlest ) smlest = eigenv
 600  continue
      do 700 i = 1 , N
         do 650 j = 1 , i
            sij = zero
            do 620 k = 1 , N
               sij = sij + EVAL(k)*BLK(i,k)*BLK(j,k)
 620        continue
            S(j,i) = sij
 650     continue
 700  continue
C
C  the upper triangle of s (including the diagonal)
C   now contains the -0.5 power of the weighted overlap matrix,
C   and is the weighted orthog. transform that we want.
C   now, form the total transformation:
      do 900 i = 1 , NBAS
         do 750 j = 1 , N
            EVAL(j) = zero
            do 720 k = 1 , j
               kp = LIST(k)
               tik = T(i,kp)
               if ( tik.ne.zero ) EVAL(j) = EVAL(j) + tik*S(k,j)
 720        continue
            jp1 = j + 1
            do 740 k = jp1 , N
               kp = LIST(k)
               tik = T(i,kp)
               if ( tik.ne.zero ) EVAL(j) = EVAL(j) + tik*S(j,k)
 740        continue
 750     continue
         do 800 j = 1 , N
            jp = LIST(j)
            T(i,jp) = EVAL(j)
 800     continue
 900  continue
C  restore full overlap matrix s:
      do 1000 i = 1 , NBAS
         im1 = i - 1
         do 950 j = 1 , im1
            S(j,i) = S(i,j)
 950     continue
         S(i,i) = one
 1000 continue
      return
C
 1100 write (Lfnpr,99001) eigenv , toosml
      stop
C
99001 format (//1x,'An eigenvalue of the weighted PRE-NAO overlap',
     &        ' matrix of ',f10.5,' has been',/,1x,
     &        'found, which is lower than',' the allowed threshold of ',
     &        f10.5,'.  This is',/,1x,'probably',
     &    ' caused by either an error in the data given to the analysis'
     &    ,' program',/,1x,
     &    'or by numerical problems caused by near linear',
     &    ' dependencies among the basis',/,1x,'functions.')
      end
@* INDEX.
