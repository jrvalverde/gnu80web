@*limtrn.
\section*{\sf Dummy Arguments}  \begin{description}

\item[OUTPUT:] T
\item[INPUT:] M
\item[INPUT:] A
\item[OUTPUT:] B
\item[INPUT:] NDIM
\item[INPUT:] NBAS
\item[INPUT:] NCDIM
\item[INPUT:] NC
\item[INPUT:] IOPT

\end{description} \section*{\sf Common Variables}  \begin{description}

\item[Modifies]     NOTHING 
\item[Uses]   NOTHING 

\end{description}  \section*{\sf External Subprograms}  \begin{description}

\item[Calls]        NOTHING 
\item[Called by]   DFGORB  NLMO    REDBLK  RYDIAG

\end{description}
@a
C*****************************************************************************
      subroutine limtrn(T,M,A,B,NDIM,NBAS,NCDIM,NC,IOPT)
C*****************************************************************************
      implicit none
      double precision A , B , sum , T
      integer i , IOPT , j , k , M , NBAS , NC , NCDIM , NDIM
      dimension T(NDIM,NDIM) , M(NCDIM) , A(NCDIM,NCDIM) , B(NCDIM)
C...do a limited transformation of t, including only the "nc" rows and
C    columns specified in the vector "m":
C
C   iopt= 1 :  take t=t*a
C   iopt= 0 :  take t=a(transpose)*t*a
C   iopt=-1 :  take t=a(transpose)*t
C
C
      if ( IOPT.ne.1 ) then
C   first, take t=a(transpose)*t, where t=s,dm
         do 50 j = 1 , NBAS
            do 20 k = 1 , NC
               B(k) = T(M(k),j)
 20         continue
            do 40 i = 1 , NC
               sum = 0.0D0
               do 30 k = 1 , NC
                  sum = sum + A(k,i)*B(k)
 30            continue
               T(M(i),j) = sum
 40         continue
 50      continue
         if ( IOPT.eq.-1 ) return
      endif
C   now, take t=t*a
      do 200 i = 1 , NBAS
         do 100 k = 1 , NC
            B(k) = T(i,M(k))
 100     continue
         do 150 j = 1 , NC
            sum = 0.0D0
            do 120 k = 1 , NC
               sum = sum + B(k)*A(k,j)
 120        continue
            T(i,M(j)) = sum
 150     continue
 200  continue
      return
      end
@* INDEX.
