@*atdiag.
\section*{\sf Dummy Arguments}  \begin{description}

\item[INPUT:] N
\item[OUTPUT:] A
\item[OUTPUT:] B
\item[OUTPUT:] EVAL
\item[INPUT:] C

\end{description} \section*{\sf Common Variables}  \begin{description}

\item[Modifies]     NOTHING 
\item[Uses]   NOTHING 

\end{description}  \section*{\sf External Subprograms}  \begin{description}

\item[Calls]       COPY    JACOBI  SIMTRS
\item[Called by]   NAO     RYDIAG

\end{description}
@a
C*****************************************************************************
      subroutine atdiag(N,A,B,EVAL,C)
C*****************************************************************************
      implicit none
      double precision A , B , C , EVAL , one , temp , zero
      integer i , j , k , N
C
C  solve generalized eigenvalue problem (a-eval*b)*c = 0.
C
C  use jacobi to diagonalize b**(-1/2)*a*b**(-1/2); a and b are destroyed.
C
      dimension A(N,N) , B(N,N) , EVAL(N) , C(N,N)
      data zero , one/0.0D0 , 1.0D0/
C  first form b**(-1/2) and store it in b:
      call jacobi(N,B,EVAL,C,N,N,0)
      do 100 i = 1 , N
         EVAL(i) = one/sqrt(EVAL(i))
 100  continue
      do 200 i = 1 , N
         do 150 j = 1 , i
            temp = zero
            do 120 k = 1 , N
               temp = temp + EVAL(k)*C(i,k)*C(j,k)
 120        continue
            B(i,j) = temp
            B(j,i) = temp
 150     continue
 200  continue
C  now similarity transform a with b:
      call simtrs(A,B,EVAL,N,N)
C  diagonalize a:
      call jacobi(N,A,EVAL,C,N,N,1)
C  multiply b*c to get eigenvectors for original problem, store in a:
      do 300 i = 1 , N
         do 250 j = 1 , N
            temp = zero
            do 220 k = 1 , N
               temp = temp + B(i,k)*C(k,j)
 220        continue
            A(i,j) = temp
 250     continue
 300  continue
C  move final eigenvectors to c:
      call copy(A,C,N,N,N)
      return
      end
@* INDEX.
